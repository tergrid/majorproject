/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../request.js";import{ClonableMixin as t}from"../core/Clonable.js";import o from"../core/Collection.js";import i from"../core/Error.js";import{MultiOriginJSONMixin as s}from"../core/MultiOriginJSONSupport.js";import{throwIfAbortError as a}from"../core/promiseUtils.js";import{urlToObject as l,join as n}from"../core/urlUtils.js";import{property as p}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/Logger.js";import"../core/RandomLCG.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import u from"./Layer.js";import y from"./catalog/CatalogDynamicGroupLayer.js";import c from"./catalog/CatalogFootprintLayer.js";import d from"./graphics/sources/FeatureLayerSource.js";import{createDrawingInfo as f}from"./graphics/sources/support/clientSideDefaults.js";import{APIKeyMixin as h}from"./mixins/APIKeyMixin.js";import{ArcGISService as j}from"./mixins/ArcGISService.js";import{BlendLayer as g}from"./mixins/BlendLayer.js";import{CustomParametersMixin as L}from"./mixins/CustomParametersMixin.js";import{FeatureLayerBase as x}from"./mixins/FeatureLayerBase.js";import{OperationalLayer as v}from"./mixins/OperationalLayer.js";import{OrderedLayer as S}from"./mixins/OrderedLayer.js";import{PortalLayer as I}from"./mixins/PortalLayer.js";import{RefreshableLayer as w}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as F}from"./mixins/ScaleRangeLayer.js";import{TemporalLayer as C}from"./mixins/TemporalLayer.js";import{ensureLayerCredential as O}from"./support/featureLayerUtils.js";import{defineFieldProperties as P}from"./support/fieldProperties.js";import{serviceSupportsSpatialReference as b}from"./support/versionUtils.js";import q from"../rest/support/Query.js";const E="esri.layers.CatalogLayer",Q=P();let T=class extends(x(g(S(C(F(w(j(v(I(s(L(h(t(u)))))))))))))){constructor(e){super(e),this.dynamicGroupLayer=new y({parent:this}),this.fields=null,this.fieldsIndex=null,this.footprintLayer=new c({parent:this}),this.itemSourceField="cd_itemsource",this.itemTypeField="cd_itemtype",this.layers=new o([this.dynamicGroupLayer,this.footprintLayer]),this.source=new d({layer:this}),this.type="catalog"}load(e){const r=null!=e?e.signal:null,t=this.loadFromPortal({supportedTypes:["Feature Service"]},e).catch(a).then((async()=>{if(!this.url)throw new i("catalog-layer:missing-url","Catalog layer must be created with a url");if(this.url&&null==this.layerId){const e=await this._fetchFirstValidLayerId(r);if(null==e)throw new i("catalog-layer:missing-layerId","There is no Catalog Layer in the service",{service:this.url});this.layerId=e}await this.source.load(),this.source.sourceJSON&&(this.sourceJSON=this.source.sourceJSON,this.read(this.source.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}))})).then((()=>O(this,"load",e)));return this.addResolvingPromise(t),Promise.resolve(this)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")??0)+1}get parsedUrl(){const e=l(this.url);return null!=e&&null!=this.layerId&&(e.path=n(e.path,this.layerId.toString())),e}createQuery(){const e=new q,r=this.capabilities?.query;e.returnGeometry=!0,r&&(e.compactGeometryEnabled=r.supportsCompactGeometry,e.defaultSpatialReferenceEnabled=r.supportsDefaultSpatialReference),e.outFields=["*"];const{timeOffset:t,timeExtent:o}=this;return e.timeExtent=null!=t&&null!=o?o.offset(-t.value,t.unit):o||null,e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,r){return this.fieldsIndex.get(e)?.domain}async queryFeatures(e,r){const t=await this.load(),o=await t.source.queryFeatures(q.from(e)??t.createQuery(),r);if(o?.features)for(const i of o.features)i.layer=i.sourceLayer=t.footprintLayer;return o}async queryObjectIds(e,r){return(await this.load()).source.queryObjectIds(q.from(e)??this.createQuery(),r)}async queryFeatureCount(e,r){return(await this.load()).source.queryFeatureCount(q.from(e)??this.createQuery(),r)}async queryExtent(e,r){return(await this.load()).source.queryExtent(q.from(e)??this.createQuery(),r)}serviceSupportsSpatialReference(e){return this.loaded&&b(this,e)}read(e,r){super.read(e,r);let t=e.footprintLayer;t||"service"!==r?.origin||(t={layerDefinition:{drawingInfo:f(e.geometryType)}}),this.footprintLayer.read(t,r)}_fetchFirstValidLayerId(e){return r(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then((e=>{const r=e.data;if(r)return Array.isArray(r.layers)?r.layers.find((e=>"Catalog Layer"===e.type))?.id:void 0}))}};e([p({readOnly:!0})],T.prototype,"createQueryVersion",null),e([p({...Q.fields,json:{origins:{service:{name:"fields"}}}})],T.prototype,"fields",void 0),e([p(Q.fieldsIndex)],T.prototype,"fieldsIndex",void 0),e([p({json:{read:!1,write:!1}})],T.prototype,"footprintLayer",void 0),e([p()],T.prototype,"itemSourceField",void 0),e([p()],T.prototype,"itemTypeField",void 0),e([p()],T.prototype,"layers",void 0),e([p({value:"CatalogLayer",type:["CatalogLayer"]})],T.prototype,"operationalLayerType",void 0),e([p()],T.prototype,"outFields",void 0),e([p({readOnly:!0})],T.prototype,"parsedUrl",null),e([p()],T.prototype,"source",void 0),e([p({json:{read:!1}})],T.prototype,"type",void 0),T=e([m(E)],T);const G=T;export{G as default};
