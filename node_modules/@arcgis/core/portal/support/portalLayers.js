/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import e from"../../core/Error.js";import{findAssociatedFeatureService as a}from"../../layers/support/associatedFeatureServiceUtils.js";import{LayerLoadContext as r}from"../../layers/support/LayerLoadContext.js";import{sceneServiceLayerTypeToClassName as t}from"../../layers/support/layerUtils.js";import{layerLookupMap as s}from"../../layers/support/lazyLayerLoader.js";import c from"../PortalItem.js";import{getFirstLayerOrTable as n,getNumLayersAndTables as i,preprocessFSItemData as o,getSubtypeGroupLayerIds as u,getOrientedImageryLayerIds as l,getCatalogLayerIds as m,populateSceneServiceItemData as y,getFirstLayerOrTableId as f}from"./loadUtils.js";import{hasTypeKeyword as p}from"./portalItemUtils.js";async function d(e){!e.portalItem||e.portalItem instanceof c||(e={...e,portalItem:new c(e.portalItem)});const a=await L(e.portalItem);return new(0,a.constructor)({portalItem:e.portalItem,...a.properties})}async function L(e){await e.load();const a=new r;return N(await w(e,a))}async function w(a,r){switch(a.type){case"3DTiles Service":return C();case"CSV":return P();case"Feature Collection":return M(a);case"Feature Service":return I(a,r);case"Feed":return U();case"GeoJson":return j();case"Group Layer":return V();case"Image Service":return h(a,r);case"KML":return F();case"Map Service":return S(a,r);case"Media Layer":return W();case"Scene Service":return v(a,r);case"Stream Service":return g();case"Vector Tile Service":return T();case"WFS":return G();case"WMS":return b();case"WMTS":return O();default:throw new e("portal:unknown-item-type","Unknown item type '${type}'",{type:a.type})}}async function N(e){const a=e.className,r=s[a];return{constructor:await r(),properties:e.properties}}async function S(e,a){return await D(e,a)?{className:"TileLayer"}:{className:"MapImageLayer"}}async function I(e,a){const r=await J(e,a);if("object"==typeof r){const{sourceJSON:e,className:a}=r,t={sourceJSON:e};return null!=r.id&&(t.layerId=r.id),{className:a||"FeatureLayer",properties:t}}return{className:"GroupLayer"}}async function v(e,r){const s=await J(e,r,(async()=>{try{if(!e.url)return[];const{serverUrl:t}=await a(e.url,{sceneLayerItem:e}),s=await r.fetchServiceMetadata(t);return s?.tables??[]}catch{return[]}}));if("object"==typeof s){const a={};let c;if(null!=s.id?(a.layerId=s.id,c=`${e.url}/layers/${s.id}`):c=e.url,e.typeKeywords?.length)for(const r of Object.keys(t))if(e.typeKeywords.includes(r))return{className:t[r]};const i=await r.fetchServiceMetadata(c,{customParameters:await r.fetchCustomParameters(e,(e=>n(e)?.customParameters))});return{className:t[i?.layerType]||"SceneLayer",properties:a}}if(!1===s){const a=await r.fetchServiceMetadata(e.url);if("Voxel"===a?.layerType)return{className:"VoxelLayer"}}return{className:"GroupLayer"}}async function M(e){await e.load();const a=p(e,"Map Notes"),r=p(e,"Markup");if(a||r)return{className:"MapNotesLayer"};if(p(e,"Route Layer"))return{className:"RouteLayer"};const t=await e.fetchData();return 1===i(t)?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function h(e,a){await e.load();const r=e.typeKeywords?.map((e=>e.toLowerCase()))??[];if(r.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(r.includes("tiled imagery"))return{className:"ImageryTileLayer"};const t=await a.fetchItemData(e),s=t?.layerType;if("ArcGISTiledImageServiceLayer"===s)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===s)return{className:"ImageryLayer"};const c=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)}),n=c.cacheType?.toLowerCase(),i=c.capabilities?.toLowerCase().includes("tilesonly");return"map"===n||i?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}function g(){return{className:"StreamLayer"}}function T(){return{className:"VectorTileLayer"}}function j(){return{className:"GeoJSONLayer"}}function C(){return{className:"IntegratedMesh3DTilesLayer"}}function P(){return{className:"CSVLayer"}}function F(){return{className:"KMLLayer"}}function G(){return{className:"WFSLayer"}}function b(){return{className:"WMSLayer"}}function O(){return{className:"WMTSLayer"}}function U(){return{className:"StreamLayer"}}function V(){return{className:"GroupLayer"}}function W(){return{className:"MediaLayer"}}async function D(e,a){const{tileInfo:r}=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)});return r}async function J(e,a,r){const{url:t,type:s}=e,c="Feature Service"===s;if(!t)return{};if(/\/\d+$/.test(t)){if(c){const r=await a.fetchServiceMetadata(t,{customParameters:await a.fetchCustomParameters(e,(e=>n(e)?.customParameters))});if("Oriented Imagery Layer"===r.type)return{id:r.id,className:"OrientedImageryLayer",sourceJSON:r}}return{}}await e.load();let f=await a.fetchItemData(e);if(c){const e=await o(f,t,a),r=K(e);if("object"==typeof r){const a=u(e),t=l(e),s=m(e);r.className=null!=r.id&&a.includes(r.id)?"SubtypeGroupLayer":null!=r.id&&t?.includes(r.id)?"OrientedImageryLayer":null!=r.id&&s?.includes(r.id)?"CatalogLayer":"FeatureLayer"}return r}"Scene Service"===s&&(f=await y(e,f,a));if(i(f)>0)return K(f);const p=await a.fetchServiceMetadata(t);return r&&(p.tables=await r()),K(p)}function K(e){return 1===i(e)&&{id:f(e)}}export{d as fromItem,w as selectLayerClassPath};
