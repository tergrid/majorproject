/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{CIMSymbolHelper as e}from"./CIMSymbolHelper.js";import{rasterizeFillStyle as r,rasterizeDash as t}from"./rasterizingUtils.js";import a from"./Rect.js";import{getSDFInfo as s,buildSDF as n}from"./SDFHelper.js";import{resampleHermite as i}from"./utils.js";const o=512;class c{constructor(e){this._resourceManager=e,this._cachedRasterizationCanvas=null}dispose(){this._cachedRasterizationCanvas=null}get _canvas(){return this._cachedRasterizationCanvas||(this._cachedRasterizationCanvas=document.createElement("canvas")),this._cachedRasterizationCanvas}rasterizeJSONResource(e,a){switch(e.type){case"dash":{const r=e.dashTemplate,a=e.capStyle,[s,n,i]=t(r,a);return{size:[n,i],image:new Uint32Array(s.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}}case"fill-style":{const[t,s,n,i]=r(this._canvas,e,a);return{size:[s,n],image:new Uint32Array(t.buffer),sdf:!1,simplePattern:!0,anchorX:0,anchorY:0,rasterizationScale:i}}case"sdf":return this._rasterizeSDFInfo(e);case"CIMHatchFill":case"CIMVectorMarker":case"CIMPictureMarker":return this._rasterizeCIMJSONResource(e,a)}}_rasterizeCIMJSONResource(r,t){switch(r.type){case"CIMHatchFill":{const a=e.fromCIMHatchFill(r,t);return this._rasterizeCIMVectorMarker(a)}case"CIMPictureMarker":{const t=e.fromCIMInsidePolygon(r);return this._rasterizeCIMVectorMarker(t)}case"CIMVectorMarker":{if("CIMMarkerPlacementInsidePolygon"===r.markerPlacement?.type){const t=e.fromCIMInsidePolygon(r);return this._rasterizeCIMVectorMarker(t)}const t=s(r);return t&&!r.avoidSDFRasterization?this._rasterizeSDFInfo(t):this._rasterizeCIMVectorMarker(r,!1)}}}_rasterizeSDFInfo(e){if(!e)return null;const[r,t,a]=n(e);return r?{size:[t,a],image:new Uint32Array(r.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}:null}_rasterizeCIMVectorMarker(r,t=!0){const s=t?a.fromExtent(r.frame):null,[n,i,o,c,l]=e.rasterize(this._canvas,r,s,this._resourceManager);return n?{size:[i,o],image:new Uint32Array(n.buffer),sdf:!1,simplePattern:!1,anchorX:c,anchorY:l}:null}rasterizeImageResource(e,r,t,a){this._canvas.width=e,this._canvas.height=r;const s=this._canvas.getContext("2d",{willReadFrequently:!0});t instanceof ImageData?s.putImageData(t,0,0):(t.setAttribute("width",`${e}px`),t.setAttribute("height",`${r}px`),s.drawImage(t,0,0,e,r));const n=s.getImageData(0,0,e,r),c=new Uint8Array(n.data);if(a)for(const i of a)if(i&&i.oldColor&&4===i.oldColor.length&&i.newColor&&4===i.newColor.length){const[e,r,t,a]=i.oldColor,[s,n,o,l]=i.newColor;if(e===s&&r===n&&t===o&&a===l)continue;for(let i=0;i<c.length;i+=4)e===c[i]&&r===c[i+1]&&t===c[i+2]&&a===c[i+3]&&(c[i]=s,c[i+1]=n,c[i+2]=o,c[i+3]=l)}let l;for(let i=0;i<c.length;i+=4)l=c[i+3]/255,c[i]=c[i]*l,c[i+1]=c[i+1]*l,c[i+2]=c[i+2]*l;let h=c,f=e,u=r;const m=o;if(f>=m||u>=m){const t=f/u;t>1?(f=m,u=Math.round(m/t)):(u=m,f=Math.round(m*t)),h=new Uint8Array(4*f*u);const a=new Uint8ClampedArray(h.buffer);i(c,e,r,a,f,u,!1)}return{size:[f,u],image:new Uint32Array(h.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}}export{c as default};
