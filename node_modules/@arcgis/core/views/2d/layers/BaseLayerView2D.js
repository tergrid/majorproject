/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{property as t}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import{create as o}from"../../../geometry/support/aaBoundingRect.js";import{equals as i}from"../../../geometry/support/spatialReferenceUtils.js";import r from"../tiling/TileInfoView.js";import"../tiling/TileKey.js";import"../tiling/TileQueue.js";import"../tiling/TileStrategy.js";import{LayerView2DMixin as l}from"./LayerView2D.js";import{Display as n}from"./support/Display.js";import a from"../../layers/LayerView.js";import p from"../../layers/RefreshableLayerView.js";const h=new Set,c=[],d=[];class u{constructor(e,t,s,i,r,l,n,a=[0,0],p=o()){this.id=e,this.level=t,this.row=s,this.col=i,this.world=r,this.resolution=l,this.scale=n,this.coords=a,this.bounds=p}}let m=class extends(p(l(a))){constructor(e){super(e),this._tileMap=new Map,this.layer=null,this.tiles=[]}initialize(){this.display=new n(this),this.container.addChild(this.display)}get _tileInfoView(){const e=this.layer?.tileInfo;return e?new r(e):null}attach(){}detach(){}requestRender(){this.display.requestRender()}tilesChanged(e,t){}supportsSpatialReference(e){const t=this.layer?.tileInfo;return!t||i(t.spatialReference,e)}async doRefresh(){}isUpdating(){return!1}update(e){const t=this._tileInfoView,s=this.tiles;if(t){const o=t.getTileCoverage(e.state,0),{spans:i,lodInfo:r}=o??{};if(i?.length&&r)for(const{row:e,colFrom:t,colTo:l}of i)for(let o=t;o<=l;o++){const t=r.normalizeCol(o),i=r.getWorldForColumn(o),l=`${r.level}/${e}/${t}/${i}`;if(!this._tileMap.has(l)){const o=new u(l,r.level,e,t,i,r.resolution,r.scale);r.getTileCoords(o.coords,o,!1),r.getTileBounds(o.bounds,o,!0),this._tileMap.set(l,o),s.push(o),c.push(o)}h.add(l)}}for(let o=s.length-1;o>=0;o--){const e=s[o];h.has(e.id)||(s.splice(o,1),d.push(e),this._tileMap.delete(e.id))}(c.length||d.length)&&(this.tilesChanged(c,d),c.length=d.length=0),h.clear(),this.requestRender()}moveStart(){}viewChange(){this.requestUpdate()}moveEnd(){}};e([t()],m.prototype,"_tileInfoView",null),e([t()],m.prototype,"layer",void 0),m=e([s("esri.views.2d.layers.BaseLayerView2D")],m);const f=m;export{f as default};
