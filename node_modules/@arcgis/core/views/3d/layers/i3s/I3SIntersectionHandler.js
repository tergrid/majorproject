/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{ViewingMode as e}from"../../../ViewingMode.js";import{isValidMbs as t}from"./I3SUtil.js";import{I3sTarget as i}from"./Intersector.js";import{newIntersectorResult as r}from"../../webgl-engine/lib/Intersector.js";import{IntersectorType as s,StoreResults as n}from"../../webgl-engine/lib/IntersectorInterfaces.js";import{getVerticalOffsetI3S as l}from"../../webgl-engine/lib/verticalOffsetUtils.js";class o{constructor(e){this.type=s.I3S,this._needVerticalOffset=!1,this.layerUid=e.layerUid,this.sublayerUid=e.sublayerUid,this._collection=e.collection,this._traverseNodeHierarchy=e.traverseNodeHierarchy,this.slicePlaneEnabled=e.slicePlaneEnabled,this.isGround=e.isGround}updateElevationAlignState(t,i){this._needVerticalOffset=t&&i===e.Global}intersect(e,s,o,a,d,u){const b=u??!1,f=e.results,h=e.options.store===n.ALL,m=e.ray.direction,y=e.tolerance;let p=e=>e,R=e=>e;const g=l(e.verticalOffset??(this._needVerticalOffset?0:null));null!=e.verticalOffset&&null!=g&&(p=e=>g.applyToMbs(e),R=e=>g.applyToObb(e));const I=(n,l)=>{if(0===n.childrenLoaded)return!1;const d=n.serviceObbInRenderSR?.isValid?n.serviceObbInRenderSR:null;return!(d&&!R(d).intersectRay(o,m,y))&&(!l||!d&&t(n.serviceMbsInRenderSR)&&!c(p(n.serviceMbsInRenderSR),o,m,y)||null!=n.geometryObbInRenderSR&&!R(n.geometryObbInRenderSR).intersectRay(o,m,y)||this._collection.intersect(l,o,a,y,g,((t,l,c,d)=>{if(l<0||null!=s&&!s(o,a,l))return;const u=e=>{const r=new i(this.layerUid,this.sublayerUid,n.index,t,d);e.set(this.type,r,l,c)};if(this.isGround&&(null==f.ground.dist||l<f.ground.dist)&&u(f.ground),!e.options.isFiltered&&((null==f.min.dist||l<f.min.dist)&&u(f.min),(null==f.max.dist||l>f.max.dist)&&u(f.max),h)){const t=r(e.ray);u(t),e.results.all.push(t)}}),b),!0)};this._traverseNodeHierarchy(I)}}function c(e,t,i,r=0){const s=e[3]+r,n=t[0]-e[0],l=t[1]-e[1],o=t[2]-e[2],c=i[0],a=i[1],d=i[2],u=c*n+a*l+d*o;return u*u-(c*c+a*a+d*d)*(n*n+l*l+o*o-s*s)>=0}export{o as I3SIntersectionHandler};
