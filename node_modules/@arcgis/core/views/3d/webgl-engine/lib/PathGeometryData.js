/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{set as t,length as e,normalize as r,dot as i,scale as s,add as o}from"../../../../core/libs/gl-matrix-2/math/vec2.js";import{create as a}from"../../../../core/libs/gl-matrix-2/factories/vec2f64.js";import{s as n,b as h}from"../../../../chunks/vec32.js";import{create as l}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{fromValues as c}from"../../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{newFloatArray as u}from"../../../../geometry/support/FloatArray.js";import{getZeroIndexArray as b}from"../../../../geometry/support/Indices.js";import{Attribute as v,Vertices as m}from"./Attribute.js";import{compressNormal as p}from"./Normals.js";import{VertexAttribute as x}from"./VertexAttribute.js";import{intersectTriangles as A}from"../materials/internal/MaterialUtil.js";class d{constructor(t){this.builder=t}onPathChanged(t){this.builder.onPathChanged()}}class f extends d{constructor(t){super(t),this.vertexAttributeColor=c(255,255,255,255),this.size=new Array,this.vertexAttributePosition=u(3*this.builder.numVerticesTotal),this.vertexAttributeNormal=new Int16Array(2*this.builder.numVerticesTotal)}bakeVertexColors(t){this.vertexAttributeColor[0]=255*t[0],this.vertexAttributeColor[1]=255*t[1],this.vertexAttributeColor[2]=255*t[2],this.vertexAttributeColor[3]=255*(t.length>3?t[3]:1)}bake(a){this.size=a;const{numVerticesTotal:l,pathVertexData:c,path:u,positions:b,profileRightAxes:v,profileUpAxes:m,profileVertexAndNormals:x}=this.builder;for(let A=0;A<l;++A){let l=c[A];const d=0===l||l===u.vertices.length-1;l*=3;const f=V;let g=0,N=0;const R=4*A,j=n(w,v[R],v[R+1],v[R+2]),E=n(D,m[R],m[R+1],m[R+2]),T=t(P,x[R]*a[0],x[R+1]*a[1]);if(d)h(f,E,j),g=v[R+3]*a[0],N=m[R+3];else{const a=I,h=C;t(a,v[R+3],m[R+3]);const l=e(a);r(a,a);const c=i(T,a);if(Math.abs(c)>l){t(h,-a[1],a[0]);const e=i(T,h);s(a,a,l*Math.sign(c)),s(h,h,e),o(T,a,h)}n(f,0,0,0)}const y=n(O,j[0]*T[0]+E[0]*T[1],j[1]*T[0]+E[1]*T[1],j[2]*T[0]+E[2]*T[1]),L=3*A;this.vertexAttributePosition[L]=b[l]+y[0]+f[0]*g,this.vertexAttributePosition[L+1]=b[l+1]+y[1]+f[1]*g,this.vertexAttributePosition[L+2]=b[l+2]+y[2]+f[2]*g;const M=t(P,x[R+2],x[R+3]);p(this.vertexAttributeNormal,A,j[0]*M[0]+E[0]*M[1]+f[0]*N,j[1]*M[0]+E[1]*M[1]+f[1]*N,j[2]*M[0]+E[2]*M[1]+f[2]*N)}}createGeometryData(){const t=this.builder.vertexIndices.length,{normalIndices:e,vertexIndices:r}=this.builder;return[[x.POSITION,new v(this.vertexAttributePosition,r,3,!0)],[x.NORMALCOMPRESSED,new v(this.vertexAttributeNormal,e,2,!0)],[x.COLOR,new v(this.vertexAttributeColor,b(t),4)]]}onPathChanged(t){super.onPathChanged(t),this.bake(this.size)}intersect(t,e,r){const i=this.builder.vertexIndices,s=new m(this.vertexAttributePosition,3),o=i.length/3;A(t,e,0,o,i,s,void 0,void 0,r)}}class g extends d{constructor(t,e,r,i){super(t),this.sizeAttributeValue=e,this.colorAttributeValue=r,this.opacityAttributeValue=i,this.vvData=null,this.baked=new f(t),this.vvData=u(4*this.builder.path.vertices.length);for(let s=0;s<this.builder.path.vertices.length;++s){this.vvData[4*s]=e,this.vvData[4*s+1]=r,this.vvData[4*s+2]=i;const t=0===s||s===this.builder.path.vertices.length-1;this.vvData[4*s+3]=t?1:0}}createGeometryData(){const{positions:t,profileRightAxes:e,profileUpAxes:r,profileVertexAndNormals:i,pathVertexIndices:s,vertexIndices:o}=this.builder;return[[x.POSITION,new v(t,s,3,!0)],[x.PROFILERIGHT,new v(e,o,4,!0)],[x.PROFILEUP,new v(r,o,4,!0)],[x.PROFILEVERTEXANDNORMAL,new v(i,o,4,!0)],[x.FEATUREVALUE,new v(this.vvData,s,4,!0)]]}onPathChanged(t){super.onPathChanged(t);const e=t.getMutableAttribute(x.POSITION);e&&(e.data=this.builder.positions)}}const P=a(),I=a(),C=a(),O=l(),V=l(),w=l(),D=l();export{g as FastUpdatePathGeometry,d as PathGeometryData,f as StaticPathGeometry};
