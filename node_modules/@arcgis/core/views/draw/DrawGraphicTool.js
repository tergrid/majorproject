/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../Graphic.js";import o from"../../core/Evented.js";import{makeHandle as i}from"../../core/handleUtils.js";import{destroyMaybe as r}from"../../core/maybe.js";import{createLength as n,zeroMeters as s,zeroSquareMeters as a,zeroDegreesGeographic as l,valueInUnit as c}from"../../core/quantityUtils.js";import{watch as p,syncAndInitial as u}from"../../core/reactiveUtils.js";import{getMetersPerVerticalUnitForSR as h}from"../../core/unitUtils.js";import{property as d}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as m}from"../../core/accessorSupport/decorators/subclass.js";import y from"../../layers/GraphicsLayer.js";import{pointEquals as v}from"../../layers/graphics/dehydratedFeatureComparison.js";import{absoluteHeightElevationInfo as g,getConvertedElevationFromXYZ as f}from"../../support/elevationInfoUtils.js";import{createCircle as _,createEllipse as O,createSquare as w,createRectangle as k,createPolygon as x,createPolyline as V,createMultipoint as G}from"./support/createUtils.js";import{getDrawHelpMessage as T}from"./support/helpMessageUtils.js";import{createViewAlignedCoordinateSystem as C}from"./support/surfaceCoordinateSystems.js";import{InteractiveToolBase as I}from"../interactive/InteractiveToolBase.js";import{tooltipKeys as b}from"../interactive/keybindings.js";import E from"../interactive/sketch/SketchOptions.js";import{getConstraintContext as S}from"../interactive/tooltip/constraintUtils.js";import{DrawPointTooltipInfo as j,DrawPolylineTooltipInfo as U,DrawPolygonTooltipInfo as z,DrawMeshTooltipInfo as M,DrawRectangleTooltipInfo as H,DrawCircleTooltipInfo as A}from"../interactive/tooltip/DrawTooltipInfos.js";import{Tooltip as P}from"../interactive/tooltip/Tooltip.js";import{directionForVertices as R}from"../support/angularMeasurementUtils.js";import{autoArea2D as D}from"../support/automaticAreaMeasurementUtils.js";import{autoLength2D as L,autoDistanceBetweenPoints2D as Z}from"../support/automaticLengthMeasurementUtils.js";import{elevationFromPoint as F,elevationFromZ as N}from"../support/euclideanLengthMeasurementUtils.js";import{autorun as q}from"../../core/accessorSupport/trackingUtils.js";class B{constructor(){this.committedVertices=null,this.cursorVertex=null,this.full=null,this.outline=null,this.cursorEdge=null,this.circle=null,this.rectangle=null}}let J=class extends(o.EventedMixin(I)){constructor(e){super(e),this._graphic=null,this._createOperationGeometry=null,this.defaultZ=0,this.directionOptions=null,this.geometryType=null,this.hasZ=!0,this.geometryToPlace=null,this.mode=null,this.snappingManager=null,this.snapToScene=!1,this.sketchOptions=new E}initialize(){this.internalGraphicsLayer=new y({listMode:"hide",internal:!0}),this.view.map.layers.add(this.internalGraphicsLayer);const e=this.drawOperation=this.makeDrawOperation(),{sketchOptions:t}=this,o=this.view.type;this.tooltipInfos={point:new j({sketchOptions:t,viewType:o}),polyline:new U({sketchOptions:t,viewType:o}),polygon:new z({sketchOptions:t,viewType:o}),mesh:new M({sketchOptions:t,viewType:o}),rectangle:new H({sketchOptions:t}),circle:new A({sketchOptions:t})},this.tooltip=new P({view:this.view}),this._initializeConstraints(),this.addHandles([e.on("vertex-add",(e=>this.onVertexAdd(e))),e.on("vertex-remove",(e=>this.onVertexRemove(e))),e.on("vertex-update",(e=>this.onVertexUpdate(e))),e.on("cursor-update",(e=>this.onCursorUpdate(e))),e.on("cursor-remove",(()=>this._updateGraphic())),e.on("complete",(e=>this.onComplete(e))),p((()=>this.cursor),(t=>e.cursor=t),u),q((()=>this._updateTooltipInfo())),q((()=>{e.constraintZ=this._constraintZ}))]),this.finishToolCreation()}destroy(){this.drawOperation=r(this.drawOperation),this.tooltip=r(this.tooltip),this._destroyAllVisualizations(),this.view.map.remove(this.internalGraphicsLayer),this.internalGraphicsLayer=r(this.internalGraphicsLayer),this._set("view",null)}get _defaultElevation(){const e=h(this.drawOperation.coordinateHelper.spatialReference);return n(this.defaultZ*e,"meters")}get _inputModeAvailable(){const{inputEnabled:e,visibleElements:t}=this.sketchOptions.tooltips;return e&&!0===this.activeTooltipInfo?.editableFields.some((e=>!0===t[e.name]))}get canRedo(){return this.drawOperation.canRedo}get canUndo(){return this.drawOperation.canUndo}set centered(e){this._set("centered",e),this._updateGraphic()}get cursor(){return this._get("cursor")}set cursor(e){this._set("cursor",e)}set enabled(e){this.drawOperation.interactive=e,this._set("enabled",e)}set forceUniformSize(e){this._set("forceUniformSize",e),this._updateGraphic()}get graphic(){return this._graphic}set graphicSymbol(e){this._set("graphicSymbol",e),null!=this._graphic&&(this._graphic.symbol=e)}get updating(){return this.drawOperation?.updating??!1}completeCreateOperation(){this.drawOperation.complete()}onInputEvent(e){if(!this.destroyed)return"key-down"===e.type&&e.key===b.enterInputMode&&this._inputModeAvailable?(this.tooltip.enterInputMode(),void e.stopPropagation()):void this.drawOperation.onInputEvent(e)}redo(){this.drawOperation.redo()}reset(){}undo(){this.drawOperation.undo(),0===this.drawOperation.numCommittedVertices&&this._initializeConstraints()}_destroyAllVisualizations(){this.removeHandles(Q.outline),this.removeHandles(Q.regularVertices),this.removeHandles(Q.activeVertex),this.removeHandles(Q.activeEdge),this.removeHandles(K)}_createOrUpdateGraphic(e){if(null!=this._graphic)return this.updateGraphicGeometry(e),this._graphic;const o=new t({...this.graphicProperties,symbol:this.graphicSymbol});return this._graphic=o,this.updateGraphicGeometry(e),this.internalGraphicsLayer.add(o),this.addHandles(this.initializeGraphic(o)),this.notifyChange("graphic"),this.addHandles(i((()=>{this.internalGraphicsLayer.remove(o),this._graphic===o&&(this._graphic=null)})),K),o}updateGraphicGeometry(e){this._graphic.geometry=e}_getCreateOperationGeometry(e={operationComplete:!1}){if(null==this.drawOperation)return;const{coordinateHelper:t,view:o,visualizationCursorVertex:i,lastVertex:r,committedVertices:n,geometryIncludingUncommittedVertices:s,numCommittedVertices:a}=this.drawOperation;if(!(a>0||null!=i))return;const l=e.operationComplete?n:s,c=l.length,p=null!=i?t.pointToArray(i):null,u=o.spatialReference,h="3d"===o.type&&"global"===o.viewingMode,d=new B;d.committedVertices=n,d.cursorVertex=p;const{geometryType:m}=this;switch(m){case"point":case"mesh":d.full=t.arrayToPoint(l[0]);break;case"multipoint":d.full=c>0?G(l,u):null;break;case"polyline":case"polygon":c>0&&(d.full="polygon"===m?x([l],u,h,!0):V([l],u,h),d.cursorEdge=null!=p&&r&&!v(i,r)?V([[p,t.pointToArray(r)]],u,h):null,d.outline=c>1?d.full:null);break;case"circle":case"rectangle":{if(d.committedVertices=d.cursorVertex=null,!c)break;const t=C(o,l[0]),i=l[0],r=t.makeMapPoint(i[0]+X*o.resolution,i[1]);"circle"===m?1===c&&e.operationComplete?d.circle=_([i,r],t,!0):2===c&&(this.forceUniformSize?d.circle=_(l,t,this.centered):d.rectangle=O(l,t,this.centered)):1===c&&e.operationComplete?d.rectangle=w([i,r],t,!0):2===c&&(d.rectangle=this.forceUniformSize?w(l,t,this.centered):k(l,t,this.centered)),d.full=null!=d.circle?d.circle.geometry:d.rectangle?.geometry,d.outline="polygon"===d.full?.type?d.full:null;break}default:return null}return d}initializeGraphic(e){return i()}onComplete(e){if(!this.drawOperation)return;this._updateGraphic();let t=null;if(this.drawOperation.isCompleted){const e=this._getCreateOperationGeometry({operationComplete:!0});null!=e&&(t=this._createOrUpdateGraphic(e.full))}this._createOperationGeometry=null,this.emit("complete",{graphic:t,...e})}onCursorUpdate(e){this._updateGraphic(),this.emit("cursor-update",e)}onDeactivate(){const{drawOperation:e}=this;e&&(e.isCompleted||e.cancel())}onOutlineChanged(e){return i()}onCursorEdgeChanged(e){return i()}onVertexAdd(e){this._updateGraphic(),this._unlockConstraintsOnVertexAddOrRemove(),this._lockElevationOnVertexAdd(e.vertices.at(0)?.coordinates),this.emit("vertex-add",e)}onVertexRemove(e){this._updateGraphic(),this._unlockConstraintsOnVertexAddOrRemove(),this.emit("vertex-remove",e)}onVertexUpdate(e){this._updateGraphic(),this.emit("vertex-update",e)}_updateGraphic(){const e=this._getCreateOperationGeometry();this._createOperationGeometry=e,null!=e?(null!=e.cursorEdge?this.addHandles(this.onCursorEdgeChanged(e.cursorEdge),Q.activeEdge):this.removeHandles(Q.activeEdge),null!=e.outline?this.addHandles(this.onOutlineChanged(e.outline),Q.outline):this.removeHandles(Q.outline),null!=e.committedVertices?this.addHandles(this.onRegularVerticesChanged(e.committedVertices),Q.regularVertices):this.removeHandles(Q.regularVertices),null!=e.cursorVertex?this.addHandles(this.onActiveVertexChanged(e.cursorVertex),Q.activeVertex):this.removeHandles(Q.activeVertex),null!=e.full?this._createOrUpdateGraphic(e.full):this.removeHandles(K)):this._destroyAllVisualizations()}get activeTooltipInfo(){const{drawOperation:e,graphic:t,view:o}=this;if(!e)return null;const i=this.tooltipInfos,r=t?.geometry?.type;switch(this.geometryType){case"point":return"2d"===o.type&&0===this.defaultZ?null:"point"===r?i.point:null;case"polyline":return"polyline"===r?i.polyline:null;case"polygon":return"polygon"===r?i.polygon:null;case"rectangle":return"polygon"===r?i.rectangle:null;case"circle":return"polygon"===r?i.circle:null;case"mesh":return"mesh"===r?i.mesh:null;default:return null}}_updateTooltipInfo(){const{activeTooltipInfo:e,tooltip:t,sketchOptions:o}=this;switch(e?.type){case"draw-point":this._updateDrawPointTooltipInfo(e);break;case"draw-polyline":this._updateDrawPolylineTooltipInfo(e);break;case"draw-polygon":this._updateDrawPolygonTooltipInfo(e);break;case"draw-rectangle":this._updateDrawRectangleTooltipInfo(e);break;case"draw-circle":this._updateDrawCircleTooltipInfo(e);break;case"draw-mesh":this.updateDrawMeshTooltipInfo(e)}t.view=this.view,t.info=o.tooltips.effectiveEnabled?e:null}_updateDrawPointTooltipInfo(e){const{drawOperation:t,graphic:o,view:i,sketchOptions:r}=this,{coordinateHelper:n,cursorVertex:s}=t;if(e.sketchOptions=r,e.viewType=i.type,e.helpMessage=T("point",o?.geometry),this.updateElevation(e.elevation),!s)return void(t.constraintInfo=void 0);const a=S(s,i,n.spatialReference,this._constraintElevationInfo,n.hasZ(),r.values.effectiveDirectionMode);t.constraintInfo={context:a,distance:null,direction:null,elevation:e.elevation.committed}}_updateDrawPolylineTooltipInfo(e){const t=this._createOperationGeometry,o=null!=t?t.full:null;if("polyline"!==o?.type)return;this._updatePolylineOrPolygonCommon(e);const i=L(o);e.totalLength.actual=i??s,e.sketchOptions=this.sketchOptions,e.viewType=this.view.type,e.helpMessage=T("polyline",o)}_updateDrawPolygonTooltipInfo(e){const t=this._createOperationGeometry,o=null!=t?t.full:null;if("polygon"!==o?.type)return;this._updatePolylineOrPolygonCommon(e);const i=D(o);e.area.actual=i??a,e.sketchOptions=this.sketchOptions,e.viewType=this.view.type,e.helpMessage=T("polygon",o)}_updatePolylineOrPolygonCommon(e){const{view:t,drawOperation:o,sketchOptions:i}=this,{coordinateHelper:r,cursorVertex:n,lastVertex:a,secondToLastVertex:c}=o,p=i.values.effectiveDirectionMode,u=a&&n?Z(a,n):null;if(e.distance.actual=u??s,e.distance.readOnly=null==a,e.direction.actual=null,e.direction.readOnly=!0,a&&n&&("absolute"===p||c)){const t=R(c,a,n,p);e.direction.actual=t??l,e.direction.readOnly=!1}this.updateElevation(e.elevation);const h=n??a;if(h){const i=S(h,t,r.spatialReference,this._constraintElevationInfo,r.hasZ(),p);o.constraintInfo={context:i,distance:e.distance.committed,direction:e.direction.committed,elevation:e.elevation.committed}}else o.constraintInfo=void 0}updateDrawMeshTooltipInfo(e){}_updateDrawRectangleTooltipInfo(e){e.sketchOptions=this.sketchOptions,e.xSize=this._xSize??s,e.ySize=this._ySize??s,e.area=this._fullGeometryArea??a}_updateDrawCircleTooltipInfo(e){const{forceUniformSize:t}=this;e.sketchOptions=this.sketchOptions,e.radius=t?this._circleRadius??s:null,e.xSize=t?null:this._xSize??s,e.ySize=t?null:this._ySize??s,e.area=this._fullGeometryArea??a}get _circleRadius(){const e=this._createOperationGeometry;return null!=e?.circle?.center&&null!=e.circle.edge?Z(e.circle.center,e.circle.edge):null}get _xSize(){const e=this._createOperationGeometry?.rectangle?.midpoints;return null!=e?Z(e.left,e.right):null}get _ySize(){const e=this._createOperationGeometry?.rectangle?.midpoints;return null!=e?Z(e.top,e.bottom):null}get _fullGeometryArea(){const e=this._createOperationGeometry?.full;return"polygon"!==e?.type?null:D(e)}updateElevation(e){const{drawOperation:t}=this,o=t?.cursorVertex??t?.lastVertex;e.actual=F(o)??this._defaultElevation,e.visible="3d"===this.view.type&&this.hasZ,e.readOnly=!1}get _constraintElevationInfo(){return this.drawOperation?.elevationInfo??g}get _constraintZ(){const{geometryType:e}=this;switch(e){case"point":case"mesh":case"polyline":case"polygon":{const t=this.tooltipInfos[e].elevation.committed;if(!t)return;const o=this.drawOperation.coordinateHelper.spatialReference;return c(t,"meters")/h(o)}default:return}}_initializeConstraints(){const{directionOptions:e,drawOperation:t,geometryType:o,tooltipInfos:i,sketchOptions:r}=this,n=e=>{const o=t.elevationInfo?.mode,r=i[e].elevation;"relative-to-ground"===o||"relative-to-scene"===o||"on-the-ground"===o?r.lock(this._defaultElevation):r.unlock()},s=t=>{if(e){const o=i[t].direction;o.committed=e.angle,o.unlockOnVertexPlacement=!1,r.values.directionMode=e.mode}};switch(o){case"polygon":case"polyline":n(o),s(o);break;case"point":case"mesh":n(o)}}_lockElevationOnVertexAdd(e){const{activeTooltipInfo:t,drawOperation:o,view:i}=this,r=this._constraintElevationInfo;if("2d"===i.type||!e||"absolute-height"!==r.mode||1!==o?.numCommittedVertices||!t||"draw-polyline"!==t.type&&"draw-polygon"!==t.type||t.elevation.locked)return;const[n,s,a]=e,l=this._getConvertedVertexElevation(n,s,a,r);null!=l&&t.elevation.lock(l)}_unlockConstraintsOnVertexAddOrRemove(){this.activeTooltipInfo?.allFields.forEach((e=>{e.unlockOnVertexPlacement&&e.unlock()}))}_getConvertedVertexElevation(e,t,o,i){const{view:r,drawOperation:n}=this;if("3d"!==r.type||!n)return;const{spatialReference:s}=n.coordinateHelper;o??=0;const a=n.elevationInfo,l=f(r,e,t,o,s,a,i);return N(l,s)??this._defaultElevation}};e([d()],J.prototype,"_createOperationGeometry",void 0),e([d()],J.prototype,"_defaultElevation",null),e([d()],J.prototype,"_inputModeAvailable",null),e([d({value:!0})],J.prototype,"centered",null),e([d()],J.prototype,"cursor",null),e([d({nonNullable:!0})],J.prototype,"defaultZ",void 0),e([d({constructOnly:!0})],J.prototype,"directionOptions",void 0),e([d()],J.prototype,"drawOperation",void 0),e([d({value:!0})],J.prototype,"enabled",null),e([d({value:!0})],J.prototype,"forceUniformSize",null),e([d({constructOnly:!0})],J.prototype,"geometryType",void 0),e([d()],J.prototype,"graphic",null),e([d({constructOnly:!0})],J.prototype,"graphicProperties",void 0),e([d()],J.prototype,"graphicSymbol",null),e([d({constructOnly:!0})],J.prototype,"hasZ",void 0),e([d({constructOnly:!0})],J.prototype,"geometryToPlace",void 0),e([d({constructOnly:!0})],J.prototype,"mode",void 0),e([d()],J.prototype,"snappingManager",void 0),e([d()],J.prototype,"snapToScene",void 0),e([d()],J.prototype,"tooltip",void 0),e([d()],J.prototype,"tooltipInfos",void 0),e([d({constructOnly:!0,type:E})],J.prototype,"sketchOptions",void 0),e([d({readOnly:!0})],J.prototype,"updating",null),e([d({constructOnly:!0,nonNullable:!0})],J.prototype,"view",void 0),e([d()],J.prototype,"activeTooltipInfo",null),e([d()],J.prototype,"_circleRadius",null),e([d()],J.prototype,"_xSize",null),e([d()],J.prototype,"_ySize",null),e([d()],J.prototype,"_fullGeometryArea",null),e([d()],J.prototype,"_constraintElevationInfo",null),e([d()],J.prototype,"_constraintZ",null),J=e([m("esri.views.draw.DrawGraphicTool")],J);const K=Symbol("create-operation-graphic"),Q={outline:Symbol("outline-visual"),regularVertices:Symbol("regular-vertices-visual"),activeVertex:Symbol("active-vertex-visual"),activeEdge:Symbol("active-edge-visual")};function W(e){switch(e){case"point":case"polyline":case"polygon":case"multipoint":return e;case"circle":case"rectangle":return"segment";case"mesh":return"point"}}const X=48;export{B as CreateOperationGeometry,J as DrawGraphicTool,W as geometryTypeToDrawOperationGeometryType};
