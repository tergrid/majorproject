/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import e from"../../../core/Accessor.js";import n from"../../../core/Evented.js";import{isAborted as i}from"../../../core/promiseUtils.js";import{watch as s,sync as r,syncAndInitial as a}from"../../../core/reactiveUtils.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as d}from"../../../core/accessorSupport/decorators/subclass.js";import{project as p,initializeProjection as c}from"../../../geometry/projection.js";import{absoluteHeightElevationInfo as h}from"../../../support/elevationInfoUtils.js";import{fromPoint as l,toElevationAlignedDehydratedPoint as u}from"../sketch/normalizedPoint.js";import{defaults as f}from"./Settings.js";import{SnappingDomain as _}from"./SnappingDomain.js";import{defaultSnappingEnginesFactory as g}from"./snappingFactory.js";import m from"./SnappingOptions.js";import{sortCandidatesInPlace as S,squaredScreenDistance as v}from"./snappingUtils.js";import{EdgeSnappingCandidate as C}from"./candidates/EdgeSnappingCandidate.js";import{IntersectionSnappingCandidate as y}from"./candidates/IntersectionSnappingCandidate.js";import{LineSnappingCandidate as P}from"./candidates/LineSnappingCandidate.js";import{ParallelLineSnappingCandidate as E}from"./candidates/ParallelLineSnappingCandidate.js";import{RightAngleSnappingCandidate as w}from"./candidates/RightAngleSnappingCandidate.js";import{vectorToScreenPoint as T}from"../support/viewUtils.js";let j=class extends(n.EventedMixin(e)){constructor(t){super(t),this.options=new m,this.snappingEnginesFactory=g,this._engines=[],this._currentMainCandidate=null,this._currentOtherActiveCandidates=[],this._currentSnappedType=M.MAIN}initialize(){this.addHandles([s((()=>{const{effectiveFeatureEnabled:t,effectiveSelfEnabled:e,touchSensitivityMultiplier:n,distance:i,constraintsActive:s}=this.options;return{effectiveFeatureEnabled:t,effectiveSelfEnabled:e,touchSensitivityMultiplier:n,distance:i,constraintsActive:s}}),(()=>{this.doneSnapping(),this.emit("changed")}),r),s((()=>this.options),(t=>{for(const e of this._engines)e.options=t}),r),s((()=>({viewReady:this.view.ready,viewSpatialReference:this.view.spatialReference,snappingEnginesFactory:this.snappingEnginesFactory})),(({viewReady:t,snappingEnginesFactory:e})=>this._recreateEngines(t,e)),a)])}destroy(){this._destroyEngines()}get updating(){return this._engines.some((t=>t.updating))}_recreateEngines(t,e){if(this._destroyEngines(),!t)return;const{view:n,options:i}=this;this._engines=e(n,i)}_destroyEngines(){for(const t of this._engines)t.destroy();this._engines=[]}get _squaredMouseProximityThreshold(){return this.options.distance*this.options.distance}get _squaredTouchProximityThreshold(){const{distance:t,touchSensitivityMultiplier:e}=this.options,n=t*e;return n*n}get _squaredSatisfiesConstraintThreshold(){return f.satisfiesConstraintScreenThreshold*f.satisfiesConstraintScreenThreshold}snap(t){return q(t)?this._snapMultiPoint(t):this._snapSinglePoint(t)}update(t){const{point:e,context:n}=t;this._removeVisualization();const i=this._currentMainCandidate;if(null==i)return e;const s=this._selectUpdateInput(t);if(null==s)return e;const{spatialReference:r}=n,a=p(s,r);if(null==a)return e;const{view:o}=this,{elevationInfo:d,visualizer:c}=n,h=[],f=l(a,o,d),_=i.constraint.closestTo(f);if(!this._arePointsWithinScreenThreshold(f,_,n))return this._resetSnappingState(),e;i.targetPoint=_,h.push(...i.hints);for(const p of this._currentOtherActiveCandidates)p.targetPoint=_,h.push(...p.hints);return null!=c&&this.addHandles(c.draw(h,{spatialReference:r,elevationInfo:x(n),view:o,selfSnappingZ:n.selfSnappingZ}),I),u(_,o,e,n)}doneSnapping(){this._removeVisualization(),this._resetSnappingState()}_selectUpdateInput({point:t,scenePoint:e}){switch(this._currentSnappedType){case M.MAIN:return t;case M.SCENE:return e}}_resetSnappingState(){this._currentMainCandidate=null,this._currentOtherActiveCandidates=[],this._currentSnappedType=M.MAIN}_removeVisualization(){this.removeHandles(I)}async _snapSinglePoint({point:t,context:e,signal:n}){const{view:i}=this,{elevationInfo:s}=e,r=l(t,i,s),a=await this._fetchCandidates(r,_.ALL,e,n);return this._createSnapResult(r,M.MAIN,a,i,t,e,n)}async _snapMultiPoint({point:t,scenePoint:e,context:n,signal:i}){const{view:s}=this,{coordinateHelper:r,elevationInfo:a,spatialReference:o}=n;await c(e.spatialReference,o);const d=p(e,o),h=l(d,s,a),u=await this._fetchCandidates(h,_.FEATURE,n,i);if(u.length>0){const t=await this._fetchCandidates(h,_.SELF,n,i);return this._createSnapResult(h,M.SCENE,[...u,...t],s,d,n,i)}const f=l(t,s,a),g=await this._fetchCandidates(f,_.SELF,n,i);return this._createSnapResult(f,M.MAIN,g,s,{z:r.hasZ()&&t.hasZ?t.z??0:void 0,m:r.hasM()&&t.hasM?t.m??0:void 0},n,i)}async _fetchCandidates(t,e,n,i){return(await Promise.all(this._engines.map((s=>s.fetchCandidates(t,e,n,i))))).flat()}_createSnapResult(t,e,n,s,r,a,o){return{get valid(){return!i(o)},apply:()=>{const{spatialReference:i}=a,{snappedPoint:o,hints:d}=this._processCandidates(t,e,n,a);return this._removeVisualization(),null!=a.visualizer&&this.addHandles(a.visualizer.draw(d,{spatialReference:i,elevationInfo:h,view:s,selfSnappingZ:a.selfSnappingZ}),I),u(o,s,r,a)}}}_processCandidates(t,e,n,i){if(n.length<1)return this.doneSnapping(),{snappedPoint:t,hints:[]};this._currentSnappedType!==e&&this._resetSnappingState(),S(t,n);const s=this._currentMainCandidate;if(null!=s){const r=this._findOldConstraintInNewCandidates(s,n);if(r>=0){if(!(n[r]instanceof y))return this._intersectWithOtherCandidates(r,n,t,e,i);if(this._arePointsWithinScreenThreshold(t,s.targetPoint,i))return this._updateSnappingCandidate(s,e,n,i)}}return this._intersectWithOtherCandidates(0,n,t,e,i)}_findOldConstraintInNewCandidates(t,e){return t instanceof y?this._findOldCandidateIndex(e,t.first)>=0&&this._findOldCandidateIndex(e,t.second)>=0?0:-1:this._findOldCandidateIndex(e,t)}_intersectWithOtherCandidates(t,e,n,i,s){const{coordinateHelper:r}=s,a=e[t],o=[];for(let d=0;d<e.length;++d){if(d===t)continue;const i=e[d],s=a.constraint.intersect(i.constraint);if(s)for(const t of s.closestPoints(a.targetPoint))o.push([new y(t,a,i,i.isDraped),this._squaredScreenDistance(n,t,r)])}return o.length>0&&(o.sort(((t,e)=>t[1]-e[1])),o[0][1]<this._squaredPointProximityThreshold(s.pointer))?this._updateSnappingCandidate(o[0][0],i,e,s):this.options.constraintsActive&&(a instanceof P||a instanceof C||a instanceof w||a instanceof E)?{snappedPoint:n,hints:[]}:this._updateSnappingCandidate(a,i,e,s)}_updateSnappingCandidate(t,e,n,i){this.doneSnapping(),this._currentMainCandidate=t,this._currentSnappedType=e;const s=this._currentMainCandidate.targetPoint,r=[];r.push(...t.hints);for(const a of n){if(t instanceof y){if(a.constraint.equals(t.first.constraint)||a.constraint.equals(t.second.constraint))continue}else if(a.constraint.equals(t.constraint))continue;const e=a.constraint.closestTo(s);this._squaredScreenDistance(e,s,i.coordinateHelper)<this._squaredSatisfiesConstraintThreshold&&(a.targetPoint=s,this._currentOtherActiveCandidates.push(a),r.push(...a.hints))}return{snappedPoint:s,hints:r}}_squaredPointProximityThreshold(t){return"touch"===t?this._squaredTouchProximityThreshold:this._squaredMouseProximityThreshold}_arePointsWithinScreenThreshold(t,e,n){return this._squaredScreenDistance(t,e,n.coordinateHelper)<this._squaredPointProximityThreshold(n.pointer)}_squaredScreenDistance(t,e,n){return v(this._toScreen(t,n),this._toScreen(e,n))}_toScreen(t,e){return T(t,e.spatialReference,h,this.view)}_findOldCandidateIndex(t,e){let n=-1;for(let i=0;i<t.length;++i)if(e.constraint.equals(t[i].constraint)){n=i;break}return n}get test(){return{visualizationsActive:this.hasHandles(I),engines:this._engines}}};var M;t([o({constructOnly:!0})],j.prototype,"view",void 0),t([o()],j.prototype,"options",void 0),t([o({readOnly:!0})],j.prototype,"updating",null),t([o()],j.prototype,"snappingEnginesFactory",void 0),t([o()],j.prototype,"_engines",void 0),t([o()],j.prototype,"_squaredMouseProximityThreshold",null),t([o()],j.prototype,"_squaredTouchProximityThreshold",null),t([o()],j.prototype,"_squaredSatisfiesConstraintThreshold",null),j=t([d("esri.views.interactive.snapping.SnappingManager")],j),function(t){t[t.MAIN=0]="MAIN",t[t.SCENE=1]="SCENE"}(M||(M={}));const I="visualization-handle";function q(t){return null!=t.scenePoint}function x({coordinateHelper:t,elevationInfo:e}){return t.hasZ()?h:e}export{j as SnappingManager};
