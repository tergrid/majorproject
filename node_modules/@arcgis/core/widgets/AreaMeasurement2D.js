/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import{ignoreAbortErrors as t}from"../core/promiseUtils.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/Logger.js";import"../core/RandomLCG.js";import{subclass as o}from"../core/accessorSupport/decorators/subclass.js";import i from"./Widget.js";import r from"./AreaMeasurement2D/AreaMeasurement2DViewModel.js";import{globalCss as n}from"./support/globalCss.js";import{legacyIcon as a}from"./support/legacyIcon.js";import{MeasurementWidgetContent as l}from"./support/MeasurementWidgetContent.js";import"./support/widgetUtils.js";import{messageBundle as p}from"./support/decorators/messageBundle.js";import{tsx as m}from"./support/jsxFactory.js";const u="esri-area-measurement-2d",d={base:u,newMeasurementButton:`${u}__clear-button`,widgetIcon:a.measureArea};let c=class extends i{constructor(e,t){super(e,t),this.iconClass=d.widgetIcon,this.icon=null,this.messages=null,this.messagesUnits=null,this.messagesCommon=null,this.viewModel=new r}get active(){return this.viewModel.active}get label(){return this.messages?.widgetLabel??""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:s,messagesUnits:o,unit:i,unitOptions:r,viewModel:a,visible:p}=this,{active:u,measurementLabel:c,state:v,supported:g}=a;return m("div",{"aria-label":e.widgetLabel,class:this.classes(d.base,n.widget,n.panel),key:this,role:"presentation"},p?m(l,{active:u,measurementItems:[{key:"area",title:o?.measures.area,value:c?.area},{key:"perimeter",title:e.perimeter,value:c?.perimeter}],messages:{...e,notApplicable:s.notApplicable},newMeasurementButtonClass:d.newMeasurementButton,state:v,supported:g,unit:i,unitOptions:r,onNewMeasurementClick:()=>{t(a.start())},onUnitChange:e=>{this.unit=e}}):null)}};e([s({readOnly:!0})],c.prototype,"active",null),e([s()],c.prototype,"iconClass",void 0),e([s()],c.prototype,"icon",void 0),e([s()],c.prototype,"label",null),e([s(),p("esri/widgets/AreaMeasurement2D/t9n/AreaMeasurement2D")],c.prototype,"messages",void 0),e([s(),p("esri/core/t9n/Units")],c.prototype,"messagesUnits",void 0),e([s(),p("esri/t9n/common")],c.prototype,"messagesCommon",void 0),e([s()],c.prototype,"uiStrings",void 0),e([s()],c.prototype,"unit",null),e([s()],c.prototype,"unitOptions",null),e([s()],c.prototype,"view",null),e([s({type:r})],c.prototype,"viewModel",void 0),e([s({type:Boolean})],c.prototype,"visible",null),c=e([o("esri.widgets.AreaMeasurement2D")],c);const v=c;export{v as default};
