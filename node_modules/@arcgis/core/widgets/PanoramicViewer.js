/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../Camera.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/Logger.js";import"../core/RandomLCG.js";import{subclass as i}from"../core/accessorSupport/decorators/subclass.js";import o from"../views/SceneView.js";import a from"./Widget.js";import s from"./PanoramicViewer/PanoramicViewerViewModel.js";import{globalCss as p}from"./support/globalCss.js";import"./support/widgetUtils.js";import{vmEvent as c}from"./support/decorators/vmEvent.js";import{tsx as l}from"./support/jsxFactory.js";const d="esri-panoramic-viewer";let n=class extends a{constructor(e){super(e),this.viewModel=new s,this._afterContainerCreate=e=>{this.imageRenderer.container=e},this.addGraphic=(e,t)=>{this.viewModel.addGraphic(e,t)},this.addManyGraphics=e=>{this.viewModel.addManyGraphics(e)},this.clearGraphics=()=>{this.viewModel.clearGraphics()},this.clearImage=()=>{this.viewModel.clearImage()},this.loadImage=e=>this.viewModel.loadImage(e),this.removeGraphic=e=>{this.viewModel.removeGraphic(e)},this.removeManyGraphics=e=>{this.viewModel.removeManyGraphics(e)}}get autoLoad(){return this.viewModel.autoLoad}set autoLoad(e){this.viewModel.autoLoad=e}get camera(){return this.viewModel.camera}set camera(e){e&&(this.viewModel.camera=e)}get clickAction(){return this.viewModel.clickAction}set clickAction(e){this.viewModel.clickAction=e}get fov(){return this.camera.fov}set fov(e){this.viewModel.fov=e}get imageRenderer(){return this.viewModel.imageRenderer}get imageSize(){return this.viewModel.imageSize}get imageSource(){return this.viewModel.imageSource}set imageSource(e){this.viewModel.imageSource=e}get pitch(){return this.viewModel.pitch}set pitch(e){this.viewModel.pitch=e}get state(){return this.viewModel.state}get yaw(){return this.viewModel.yaw}set yaw(e){this.viewModel.yaw=e}render(){return l("div",{afterCreate:this._afterContainerCreate,bind:this,class:this.classes(p.widget,d)})}};e([r({type:Boolean})],n.prototype,"autoLoad",null),e([r({type:t})],n.prototype,"camera",null),e([r()],n.prototype,"clickAction",null),e([r({type:Number})],n.prototype,"fov",null),e([r({readOnly:!0,type:o})],n.prototype,"imageRenderer",null),e([r({readOnly:!0})],n.prototype,"imageSize",null),e([r()],n.prototype,"imageSource",null),e([r({type:Number})],n.prototype,"pitch",null),e([r({readOnly:!0})],n.prototype,"state",null),e([c(["click","hittest-response","pixel-location"]),r({type:s})],n.prototype,"viewModel",void 0),e([r({type:Number})],n.prototype,"yaw",null),n=e([i("esri.widgets.PanoramicViewer")],n);const m=n;export{m as default};
