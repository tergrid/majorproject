{"file":"calcite-tile-group.entry.cjs.js","mappings":"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","names":["createObserver","connectInteractive","updateHostInteraction","disconnectInteractive","focusElementInGroup","h","InteractiveContainer"],"sources":["src/components/tile-group/resources.ts","src/components/tile-group/tile-group.scss?tag=calcite-tile-group&encapsulation=shadow","src/components/tile-group/tile-group.tsx"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n};\n",":host {\n  box-sizing: border-box;\n  display: inline-block;\n\n  ::slotted(calcite-tile) {\n    margin-block-end: var(--calcite-spacing-px);\n    margin-inline-end: var(--calcite-spacing-px);\n  }\n}\n.container {\n  display: grid;\n  grid-auto-rows: minmax(auto, 1fr);\n}\n:host([scale=\"s\"]) {\n  .container {\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  }\n}\n:host([scale=\"m\"]) {\n  .container {\n    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n  }\n}\n:host([scale=\"l\"]) {\n  .container {\n    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));\n  }\n}\n:host([layout=\"vertical\"]) {\n  .container {\n    display: flex;\n    flex-direction: column;\n  }\n}\n\n@include disabled();\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { Alignment, Layout, Scale, SelectionAppearance, SelectionMode } from \"../interfaces\";\nimport { createObserver } from \"../../utils/observers\";\nimport { focusElementInGroup } from \"../../utils/dom\";\nimport { SelectableGroupComponent } from \"../../utils/selectableComponent\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-tile` elements.\n */\n@Component({\n  tag: \"calcite-tile-group\",\n  styleUrl: \"tile-group.scss\",\n  shadow: true,\n})\nexport class TileGroup implements InteractiveComponent, SelectableGroupComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies the alignment of each `calcite-tile`'s content.\n   */\n  @Prop({ reflect: true }) alignment: Exclude<Alignment, \"end\"> = \"start\";\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /**\n   * Defines the layout of the component.\n   *\n   * Use `\"horizontal\"` for rows, and `\"vertical\"` for a single column.\n   */\n  @Prop({ reflect: true }) layout: Exclude<Layout, \"grid\"> = \"horizontal\";\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"scale\")\n  scaleWatcher(): void {\n    this.updateTiles();\n  }\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteTileElement[] = [];\n\n  /**\n   * Specifies the selection appearance, where:\n   *\n   * - `\"icon\"` (displays a checkmark or dot), or\n   * - `\"border\"` (displays a border).\n   */\n  @Prop({ reflect: true }) selectionAppearance: SelectionAppearance = \"icon\";\n\n  /**\n   * Specifies the selection mode, where:\n   *\n   * - `\"multiple\"` (allows any number of selected items),\n   * - `\"single\"` (allows only one selected item),\n   * - `\"single-persist\"` (allows only one selected item and prevents de-selection),\n   * - `\"none\"` (allows no selected items).\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"multiple\" | \"none\" | \"single\" | \"single-persist\",\n    SelectionMode\n  > = \"none\";\n\n  @Watch(\"selectionMode\")\n  @Watch(\"selectionAppearance\")\n  handleSelectionModeOrAppearanceChange(): void {\n    this.updateTiles();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTileGroupElement;\n\n  private items: HTMLCalciteTileElement[] = [];\n\n  private slotEl: HTMLSlotElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private getSlottedTiles = (): HTMLCalciteTileElement[] => {\n    return this.slotEl\n      ?.assignedElements({ flatten: true })\n      .filter((el) => el?.matches(\"calcite-tile\")) as HTMLCalciteTileElement[];\n  };\n\n  private mutationObserver = createObserver(\"mutation\", () => this.updateTiles());\n\n  private selectItem = (item: HTMLCalciteTileElement): void => {\n    if (!item) {\n      return;\n    }\n    this.items?.forEach((el) => {\n      const matchingEl = item === el;\n      switch (this.selectionMode) {\n        case \"multiple\":\n          if (matchingEl) {\n            el.selected = !el.selected;\n          }\n          break;\n\n        case \"single\":\n          el.selected = matchingEl && !el.selected;\n          break;\n\n        case \"single-persist\":\n          el.selected = !!matchingEl;\n          break;\n      }\n    });\n    this.updateSelectedItems();\n    this.calciteTileGroupSelect.emit();\n  };\n\n  private setSlotEl = (el: HTMLSlotElement): void => {\n    this.slotEl = el;\n  };\n\n  private updateSelectedItems = (): void => {\n    const selectedItems = this.items?.filter((el) => el.selected);\n    if (\n      (this.selectionMode === \"single\" || this.selectionMode === \"single-persist\") &&\n      selectedItems?.length > 1\n    ) {\n      this.selectedItems = [selectedItems.pop()];\n      this.items?.forEach((el) => {\n        if (this.selectedItems.indexOf(el) === -1) {\n          el.selected = false;\n        }\n      });\n    } else {\n      this.selectedItems = selectedItems ?? [];\n    }\n  };\n\n  private updateTiles = (): void => {\n    this.items = this.getSlottedTiles();\n    this.items?.forEach((el) => {\n      el.alignment = this.alignment;\n      el.interactive = true;\n      el.layout = this.layout;\n      el.scale = this.scale;\n      el.selectionAppearance = this.selectionAppearance;\n      el.selectionMode = this.selectionMode;\n    });\n    this.updateSelectedItems();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the component's selection changes. */\n  @Event({ cancelable: false }) calciteTileGroupSelect: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    this.mutationObserver?.observe(this.el, { childList: true });\n    this.updateTiles();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    this.mutationObserver?.disconnect();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalTileKeyEvent\")\n  calciteInternalTileKeyEventListener(event: CustomEvent): void {\n    if (event.composedPath().includes(this.el)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const interactiveItems = this.items?.filter((el) => !el.disabled);\n      switch (event.detail.key) {\n        case \"ArrowDown\":\n        case \"ArrowRight\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"next\");\n          break;\n        case \"ArrowUp\":\n        case \"ArrowLeft\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"previous\");\n          break;\n        case \"Home\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"first\");\n          break;\n        case \"End\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"last\");\n          break;\n      }\n    }\n  }\n\n  @Listen(\"calciteTileSelect\")\n  calciteTileSelectHandler(event: CustomEvent): void {\n    if (event.composedPath().includes(this.el)) {\n      this.selectItem(event.target as HTMLCalciteTileElement);\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const role =\n      this.selectionMode === \"none\" || this.selectionMode === \"multiple\" ? \"group\" : \"radiogroup\";\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div aria-label={this.label} class={CSS.container} role={role}>\n          <slot onSlotchange={this.updateTiles} ref={this.setSlotEl} />\n        </div>\n      </InteractiveContainer>\n    );\n  }\n}\n"],"version":3}