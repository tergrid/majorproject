{"version":3,"file":"chip-group.e2e.js","sourceRoot":"","sources":["../../../../src/components/chip-group/chip-group.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from \"@stencil/core/testing\";\nimport { html } from \"../../../support/formatting\";\nimport { accessible, renders, hidden, disabled } from \"../../tests/commonTests\";\nimport { CSS as CHIP_CSS } from \"../chip/resources\";\nimport { createSelectedItemsAsserter } from \"../../tests/utils\";\n\ndescribe(\"calcite-chip-group\", () => {\n  describe(\"renders\", () => {\n    renders(\"<calcite-chip-group><calcite-chip></calcite-chip></calcite-chip-group>\", {\n      display: \"flex\",\n    });\n  });\n\n  describe(\"honors hidden attribute\", () => {\n    hidden(\"calcite-chip-group\");\n  });\n\n  describe(\"disabled\", () => {\n    disabled(\"<calcite-chip-group><calcite-chip></calcite-chip></calcite-chip-group>\", {\n      focusTarget: \"child\",\n    });\n  });\n\n  describe(\"is accessible in selection mode none (default)\", () => {\n    accessible(\n      html`<calcite-chip-group label=\"test-label\">\n        <calcite-chip label=\"test-label\"></calcite-chip>\n        <calcite-chip label=\"test-label\"></calcite-chip>\n      </calcite-chip-group>`,\n    );\n  });\n\n  describe(\"is accessible in selection mode single\", () => {\n    accessible(\n      html` <calcite-chip-group label=\"test-label\" selection-mode=\"single\">\n        <calcite-chip label=\"test-label\"></calcite-chip>\n        <calcite-chip label=\"test-label\"></calcite-chip>\n      </calcite-chip-group>`,\n    );\n  });\n\n  describe(\"is selection mode single persists\", () => {\n    accessible(\n      html`<calcite-chip-group label=\"test-label\" selection-mode=\"single-persist\">\n        <calcite-chip label=\"test-label\"></calcite-chip>\n        <calcite-chip label=\"test-label\"></calcite-chip>\n      </calcite-chip-group>`,\n    );\n  });\n\n  describe(\"is accessible in selection mode multiple\", () => {\n    accessible(\n      html`<calcite-chip-group label=\"test-label\" selection-mode=\"multiple\">\n        <calcite-chip label=\"test-label\"></calcite-chip>\n        <calcite-chip label=\"test-label\"></calcite-chip>\n      </calcite-chip-group>`,\n    );\n  });\n\n  describe(\"selection modes function as intended\", () => {\n    it(\"selection mode single allows one or no chips to be selected\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html`<calcite-chip-group label=\"test-label\" selection-mode=\"single\">\n          <calcite-chip id=\"chip-1\" label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-2\" selected label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-3\" label=\"test-label\"></calcite-chip>\n        </calcite-chip-group>`,\n      );\n      await page.waitForChanges();\n\n      const element = await page.find(\"calcite-chip-group\");\n      const chip1 = await page.find(\"#chip-1\");\n      const chip2 = await page.find(\"#chip-2\");\n\n      const chipGroupSelectSpy = await element.spyOnEvent(\"calciteChipGroupSelect\");\n      const selectedItemAsserter = await createSelectedItemsAsserter(\n        page,\n        \"calcite-chip-group\",\n        \"calciteChipGroupSelect\",\n      );\n\n      const chipSelectSpy1 = await chip1.spyOnEvent(\"calciteChipSelect\");\n      const chipSelectSpy2 = await chip2.spyOnEvent(\"calciteChipSelect\");\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip2.id]);\n\n      await chip1.click();\n      await page.waitForChanges();\n\n      expect(await chipGroupSelectSpy).toHaveReceivedEventTimes(1);\n      expect(await chipSelectSpy1).toHaveReceivedEventTimes(1);\n      expect(await chipSelectSpy2).toHaveReceivedEventTimes(0);\n      expect(await chip1.getProperty(\"selected\")).toBe(true);\n      expect(await chip2.getProperty(\"selected\")).toBe(false);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip1.id]);\n\n      await chip2.click();\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(2);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(1);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(1);\n      expect(await chip1.getProperty(\"selected\")).toBe(false);\n      expect(await chip2.getProperty(\"selected\")).toBe(true);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip2.id]);\n\n      await chip2.click();\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(3);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(1);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(2);\n      expect(await chip1.getProperty(\"selected\")).toBe(false);\n      expect(await chip2.getProperty(\"selected\")).toBe(false);\n      expect(await element.getProperty(\"selectedItems\")).toEqual([]);\n      await selectedItemAsserter([]);\n    });\n\n    it(\"selection mode none (default) allows no chip to be selected\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html`<calcite-chip-group label=\"test-label\">\n          <calcite-chip id=\"chip-1\" label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-2\" label=\"test-label\"></calcite-chip>\n        </calcite-chip-group>`,\n      );\n      await page.waitForChanges();\n\n      const element = await page.find(\"calcite-chip-group\");\n      const chip1 = await page.find(\"#chip-1\");\n      const chip2 = await page.find(\"#chip-2\");\n      const chipGroupSelectSpy = await element.spyOnEvent(\"calciteChipGroupSelect\");\n      const selectedItemAsserter = await createSelectedItemsAsserter(\n        page,\n        \"calcite-chip-group\",\n        \"calciteChipGroupSelect\",\n      );\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toEqual([]);\n      await selectedItemAsserter([]);\n\n      await chip1.click();\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(1);\n      expect(await chip1.getProperty(\"selected\")).toBe(false);\n      expect(await chip2.getProperty(\"selected\")).toBe(false);\n      expect(await element.getProperty(\"selectedItems\")).toEqual([]);\n      await selectedItemAsserter([]);\n\n      await chip2.click();\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(2);\n      expect(await chip1.getProperty(\"selected\")).toBe(false);\n      expect(await chip2.getProperty(\"selected\")).toBe(false);\n      expect(await element.getProperty(\"selectedItems\")).toEqual([]);\n      await selectedItemAsserter([]);\n\n      await chip2.click();\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(3);\n      expect(await chip1.getProperty(\"selected\")).toBe(false);\n      expect(await chip2.getProperty(\"selected\")).toBe(false);\n      expect(await element.getProperty(\"selectedItems\")).toEqual([]);\n      await selectedItemAsserter([]);\n    });\n\n    it(\"selection mode single-persist allows one chip to be selected\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html`<calcite-chip-group label=\"test-label\" selection-mode=\"single-persist\">\n          <calcite-chip id=\"chip-1\" selected label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-2\" label=\"test-label\"></calcite-chip>\n        </calcite-chip-group>`,\n      );\n      await page.waitForChanges();\n\n      const element = await page.find(\"calcite-chip-group\");\n      const chip1 = await page.find(\"#chip-1\");\n      const chip2 = await page.find(\"#chip-2\");\n      const chipGroupSelectSpy = await element.spyOnEvent(\"calciteChipGroupSelect\");\n      const selectedItemAsserter = await createSelectedItemsAsserter(\n        page,\n        \"calcite-chip-group\",\n        \"calciteChipGroupSelect\",\n      );\n\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip1.id]);\n\n      await chip1.click();\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(1);\n      expect(await chip1.getProperty(\"selected\")).toBe(true);\n      expect(await chip2.getProperty(\"selected\")).toBe(false);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip1.id]);\n\n      await chip2.click();\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(2);\n      expect(await chip1.getProperty(\"selected\")).toBe(false);\n      expect(await chip2.getProperty(\"selected\")).toBe(true);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip2.id]);\n\n      await chip2.click();\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(3);\n      expect(await chip1.getProperty(\"selected\")).toBe(false);\n      expect(await chip2.getProperty(\"selected\")).toBe(true);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip2.id]);\n    });\n\n    it(\"selection mode multiple allows none, one, or multiple to be selected\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html`<calcite-chip-group label=\"test-label\" selection-mode=\"multiple\">\n          <calcite-chip id=\"chip-1\" label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-2\" label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-3\" label=\"test-label\"></calcite-chip>\n        </calcite-chip-group>`,\n      );\n      await page.waitForChanges();\n\n      const element = await page.find(\"calcite-chip-group\");\n      const chip1 = await page.find(\"#chip-1\");\n      const chip2 = await page.find(\"#chip-2\");\n      const chip3 = await page.find(\"#chip-3\");\n\n      const chipGroupSelectSpy = await element.spyOnEvent(\"calciteChipGroupSelect\");\n      const selectedItemAsserter = await createSelectedItemsAsserter(\n        page,\n        \"calcite-chip-group\",\n        \"calciteChipGroupSelect\",\n      );\n\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toEqual([]);\n      await selectedItemAsserter([]);\n\n      await chip1.click();\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(1);\n      expect(await chip1.getProperty(\"selected\")).toBe(true);\n      expect(await chip2.getProperty(\"selected\")).toBe(false);\n      expect(await chip3.getProperty(\"selected\")).toBe(false);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip1.id]);\n\n      await chip2.click();\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(2);\n      expect(await chip1.getProperty(\"selected\")).toBe(true);\n      expect(await chip2.getProperty(\"selected\")).toBe(true);\n      expect(await chip3.getProperty(\"selected\")).toBe(false);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(2);\n      await selectedItemAsserter([chip1.id, chip2.id]);\n\n      await chip3.click();\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(3);\n      expect(await chip1.getProperty(\"selected\")).toBe(true);\n      expect(await chip2.getProperty(\"selected\")).toBe(true);\n      expect(await chip3.getProperty(\"selected\")).toBe(true);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(3);\n      await selectedItemAsserter([chip1.id, chip2.id, chip3.id]);\n\n      await chip1.click();\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(4);\n      expect(await chip1.getProperty(\"selected\")).toBe(false);\n      expect(await chip2.getProperty(\"selected\")).toBe(true);\n      expect(await chip3.getProperty(\"selected\")).toBe(true);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(2);\n      await selectedItemAsserter([chip2.id, chip3.id]);\n\n      await chip2.click();\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(5);\n      expect(await chip1.getProperty(\"selected\")).toBe(false);\n      expect(await chip2.getProperty(\"selected\")).toBe(false);\n      expect(await chip3.getProperty(\"selected\")).toBe(true);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip3.id]);\n\n      await chip3.click();\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(6);\n      expect(await chip1.getProperty(\"selected\")).toBe(false);\n      expect(await chip2.getProperty(\"selected\")).toBe(false);\n      expect(await chip3.getProperty(\"selected\")).toBe(false);\n      expect(await element.getProperty(\"selectedItems\")).toEqual([]);\n      await selectedItemAsserter([]);\n      3;\n    });\n  });\n\n  describe(\"focus and interaction function as intended\", () => {\n    it(\"navigation with keyboard works as expected\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html`<calcite-chip-group label=\"test-label\" selection-mode=\"multiple\">\n          <calcite-chip id=\"chip-1\" label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-2\" label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-3\" label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-4\" label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-5\" label=\"test-label\"></calcite-chip>\n        </calcite-chip-group>`,\n      );\n\n      const element = await page.find(\"calcite-chip-group\");\n      const chipGroupSelectSpy = await element.spyOnEvent(\"calciteChipGroupSelect\");\n      const selectedItemAsserter = await createSelectedItemsAsserter(\n        page,\n        \"calcite-chip-group\",\n        \"calciteChipGroupSelect\",\n      );\n\n      const chip1 = await page.find(\"#chip-1\");\n      const chip2 = await page.find(\"#chip-2\");\n      const chip3 = await page.find(\"#chip-3\");\n      const chip4 = await page.find(\"#chip-4\");\n      const chip5 = await page.find(\"#chip-5\");\n\n      await chip1.click();\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip1.id);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip1.id]);\n\n      await page.keyboard.press(\"ArrowRight\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip2.id);\n\n      await page.keyboard.press(\"ArrowRight\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip3.id);\n\n      await page.keyboard.press(\"End\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip5.id);\n\n      await page.keyboard.press(\"Space\");\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(2);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(2);\n      await selectedItemAsserter([chip1.id, chip5.id]);\n\n      await page.keyboard.press(\"ArrowLeft\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip4.id);\n\n      await page.keyboard.press(\"Enter\");\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(3);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(3);\n      await selectedItemAsserter([chip1.id, chip4.id, chip5.id]);\n\n      await page.keyboard.press(\"Space\");\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(4);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(2);\n      await selectedItemAsserter([chip1.id, chip5.id]);\n\n      await page.keyboard.press(\"Home\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip1.id);\n\n      await page.keyboard.press(\"ArrowLeft\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip5.id);\n\n      await page.keyboard.press(\"ArrowRight\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip1.id);\n    });\n\n    it(\"when chips are selectable, and a chip is focused, using tab will focus the close button\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html` <calcite-chip-group label=\"test-label\" selection-mode=\"single\">\n          <calcite-chip closable id=\"chip-1\" label=\"test-label\"></calcite-chip>\n          <calcite-chip closable id=\"chip-2\" label=\"test-label\"></calcite-chip>\n          <calcite-chip closable id=\"chip-3\" label=\"test-label\"></calcite-chip>\n          <calcite-chip closable id=\"chip-4\" label=\"test-label\"></calcite-chip>\n          <calcite-chip closable id=\"chip-5\" label=\"test-label\"></calcite-chip>\n        </calcite-chip-group>`,\n      );\n\n      const chip1 = await page.find(\"#chip-1\");\n      const chip2 = await page.find(\"#chip-2\");\n      const chip3 = await page.find(\"#chip-3\");\n      const chip4 = await page.find(\"#chip-4\");\n\n      await page.keyboard.press(\"Tab\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip1.id);\n\n      await page.keyboard.press(\"Tab\");\n      await page.waitForChanges();\n      expect(await page.$eval(`#${chip1.id}`, (el) => el.shadowRoot.activeElement.className)).toEqual(CHIP_CSS.close);\n\n      await page.keyboard.press(\"Tab\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip2.id);\n\n      await page.keyboard.press(\"Tab\");\n      await page.waitForChanges();\n      expect(await page.$eval(`#${chip2.id}`, (el) => el.shadowRoot.activeElement.className)).toEqual(CHIP_CSS.close);\n\n      await page.keyboard.press(\"ArrowRight\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip3.id);\n\n      await page.keyboard.press(\"ArrowRight\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip4.id);\n\n      await page.keyboard.press(\"Tab\");\n      await page.waitForChanges();\n      expect(await page.$eval(`#${chip4.id}`, (el) => el.shadowRoot.activeElement.className)).toEqual(CHIP_CSS.close);\n    });\n\n    it(\"when closing a chip, focus the previous chip, or if the first chip is closed, focus the 'next first chip'\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html`<calcite-chip-group label=\"test-label\" selection-mode=\"single\">\n          <calcite-chip closable id=\"chip-1\" label=\"test-label\"></calcite-chip>\n          <calcite-chip closable id=\"chip-2\" label=\"test-label\"></calcite-chip>\n          <calcite-chip closable id=\"chip-3\" label=\"test-label\"></calcite-chip>\n          <calcite-chip closable id=\"chip-4\" label=\"test-label\"></calcite-chip>\n          <calcite-chip closable id=\"chip-5\" label=\"test-label\"></calcite-chip>\n        </calcite-chip-group>`,\n      );\n\n      const chip1 = await page.find(\"#chip-1\");\n      const chip2 = await page.find(\"#chip-2\");\n      const chip3 = await page.find(\"#chip-3\");\n      const chip4 = await page.find(\"#chip-4\");\n      const chip5 = await page.find(\"#chip-5\");\n      const closeButton1 = await page.find(`#${chip1.id} >>> .${CHIP_CSS.close}`);\n      const closeButton3 = await page.find(`#${chip3.id} >>> .${CHIP_CSS.close}`);\n      const closeButton5 = await page.find(`#${chip5.id} >>> .${CHIP_CSS.close}`);\n\n      await closeButton3.click();\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip2.id);\n\n      await closeButton1.click();\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip2.id);\n\n      await closeButton5.click();\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip4.id);\n    });\n\n    it(\"selectedItems property is correctly populated at load when property is set on chips in DOM\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html`<calcite-chip-group label=\"test-label\" selection-mode=\"multiple\">\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-4\" selected label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-5\" selected label=\"test-label\"></calcite-chip>\n        </calcite-chip-group>`,\n      );\n      const element = await page.find(\"calcite-chip-group\");\n      const chip4 = await page.find(\"#chip-4\");\n      const chip5 = await page.find(\"#chip-5\");\n      const selectedItemAsserter = await createSelectedItemsAsserter(\n        page,\n        \"calcite-chip-group\",\n        \"calciteChipGroupSelect\",\n      );\n      await page.waitForChanges();\n\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(2);\n      await selectedItemAsserter([chip4.id, chip5.id]);\n    });\n  });\n\n  describe(\"programmatically selecting Chips\", () => {\n    it(\"programmatically setting selected on a chip should update the component but not emit public events\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html`<calcite-chip-group label=\"test-label\" selection-mode=\"single\">\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-4\" selected label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-5\" label=\"test-label\"></calcite-chip>\n        </calcite-chip-group>`,\n      );\n      const element = await page.find(\"calcite-chip-group\");\n      const chip4 = await page.find(\"#chip-4\");\n      const chip5 = await page.find(\"#chip-5\");\n      const chipGroupSelectSpy = await element.spyOnEvent(\"calciteChipGroupSelect\");\n      const selectedItemAsserter = await createSelectedItemsAsserter(\n        page,\n        \"calcite-chip-group\",\n        \"calciteChipGroupSelect\",\n      );\n\n      const chipSelectSpy1 = await chip4.spyOnEvent(\"calciteChipSelect\");\n      const chipSelectSpy2 = await chip5.spyOnEvent(\"calciteChipSelect\");\n      await page.waitForChanges();\n\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip4.id]);\n\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(0);\n\n      await chip5.setAttribute(\"selected\", true);\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip5.id]);\n    });\n\n    it(\"programmatically setting selected on a chip in single-persist should update the component but not emit public events\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html`<calcite-chip-group label=\"test-label\" selection-mode=\"single-persist\">\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-4\" selected label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-5\" label=\"test-label\"></calcite-chip>\n        </calcite-chip-group>`,\n      );\n      const element = await page.find(\"calcite-chip-group\");\n      const chip4 = await page.find(\"#chip-4\");\n      const chip5 = await page.find(\"#chip-5\");\n      const chipGroupSelectSpy = await element.spyOnEvent(\"calciteChipGroupSelect\");\n      const selectedItemAsserter = await createSelectedItemsAsserter(\n        page,\n        \"calcite-chip-group\",\n        \"calciteChipGroupSelect\",\n      );\n\n      const chipSelectSpy1 = await chip4.spyOnEvent(\"calciteChipSelect\");\n      const chipSelectSpy2 = await chip5.spyOnEvent(\"calciteChipSelect\");\n      await page.waitForChanges();\n\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip4.id]);\n\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(0);\n\n      chip4.removeAttribute(\"selected\");\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(0);\n      await selectedItemAsserter([]);\n\n      chip5.setAttribute(\"selected\", true);\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip5.id]);\n\n      chip4.setAttribute(\"selected\", true);\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip4.id]);\n    });\n    it(\"programmatically setting selected on a chip in multiple should update the component but not emit public events\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html`<calcite-chip-group label=\"test-label\" selection-mode=\"multiple\">\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-4\" selected label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-5\" label=\"test-label\"></calcite-chip>\n        </calcite-chip-group>`,\n      );\n      const element = await page.find(\"calcite-chip-group\");\n      const chip4 = await page.find(\"#chip-4\");\n      const chip5 = await page.find(\"#chip-5\");\n      const chipGroupSelectSpy = await element.spyOnEvent(\"calciteChipGroupSelect\");\n      const selectedItemAsserter = await createSelectedItemsAsserter(\n        page,\n        \"calcite-chip-group\",\n        \"calciteChipGroupSelect\",\n      );\n\n      const chipSelectSpy1 = await chip4.spyOnEvent(\"calciteChipSelect\");\n      const chipSelectSpy2 = await chip5.spyOnEvent(\"calciteChipSelect\");\n      await page.waitForChanges();\n\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip4.id]);\n\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(0);\n\n      chip5.setAttribute(\"selected\", true);\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(2);\n      await selectedItemAsserter([chip4.id, chip5.id]);\n    });\n  });\n\n  describe(\"updating component after page load\", () => {\n    it(\"should update selected items without emitting event if chips are added after page load in multiple\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        `<calcite-chip-group label=\"test-label\" selection-mode=\"multiple\">\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-4\" selected label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-5\" selected label=\"test-label\"></calcite-chip>\n        </calcite-chip-group>`,\n      );\n      const element = await page.find(\"calcite-chip-group\");\n      const chip4 = await page.find(\"#chip-4\");\n      const chip5 = await page.find(\"#chip-5\");\n      const chipGroupSelectSpy = await element.spyOnEvent(\"calciteChipGroupSelect\");\n      const selectedItemAsserter = await createSelectedItemsAsserter(\n        page,\n        \"calcite-chip-group\",\n        \"calciteChipGroupSelect\",\n      );\n\n      const chipSelectSpy1 = await chip4.spyOnEvent(\"calciteChipSelect\");\n      const chipSelectSpy2 = await chip5.spyOnEvent(\"calciteChipSelect\");\n      await page.waitForChanges();\n\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(2);\n      await selectedItemAsserter([chip4.id, chip5.id]);\n\n      await page.evaluate(() => {\n        const group = document.querySelector(\"calcite-chip-group\");\n        const newChip = document.createElement(\"calcite-chip\");\n        newChip.id = \"chip-6\";\n        newChip.selected = true;\n        group.appendChild(newChip);\n      });\n\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(3);\n      await selectedItemAsserter([chip4.id, chip5.id, \"chip-6\"]);\n    });\n\n    it(\"should update selected items without emitting event if chips are added after page load in single\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        `<calcite-chip-group label=\"test-label\" selection-mode=\"single\">\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-4\" selected label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-5\" label=\"test-label\"></calcite-chip>\n        </calcite-chip-group>`,\n      );\n      const element = await page.find(\"calcite-chip-group\");\n      const chip4 = await page.find(\"#chip-4\");\n      const chipGroupSelectSpy = await element.spyOnEvent(\"calciteChipGroupSelect\");\n      const selectedItemAsserter = await createSelectedItemsAsserter(\n        page,\n        \"calcite-chip-group\",\n        \"calciteChipGroupSelect\",\n      );\n\n      const chipSelectSpy1 = await chip4.spyOnEvent(\"calciteChipSelect\");\n      await page.waitForChanges();\n\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip4.id]);\n\n      await page.evaluate(() => {\n        const group = document.querySelector(\"calcite-chip-group\");\n        const newChip = document.createElement(\"calcite-chip\");\n        newChip.id = \"chip-6\";\n        newChip.selected = true;\n        group.appendChild(newChip);\n      });\n\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([\"chip-6\"]);\n    });\n\n    it(\"should update selected items without emitting event if chips are removed after page load\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        `<calcite-chip-group label=\"test-label\" selection-mode=\"multiple\">\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-4\" selected label=\"test-label\"></calcite-chip>\n          <calcite-chip id=\"chip-5\" selected label=\"test-label\"></calcite-chip>\n        </calcite-chip-group>`,\n      );\n      const element = await page.find(\"calcite-chip-group\");\n      const chip4 = await page.find(\"#chip-4\");\n      const chip5 = await page.find(\"#chip-5\");\n      const chipGroupSelectSpy = await element.spyOnEvent(\"calciteChipGroupSelect\");\n      const selectedItemAsserter = await createSelectedItemsAsserter(\n        page,\n        \"calcite-chip-group\",\n        \"calciteChipGroupSelect\",\n      );\n\n      const chipSelectSpy1 = await chip4.spyOnEvent(\"calciteChipSelect\");\n      const chipSelectSpy2 = await chip5.spyOnEvent(\"calciteChipSelect\");\n      await page.waitForChanges();\n\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(2);\n      await selectedItemAsserter([chip4.id, chip5.id]);\n\n      await page.evaluate(() => {\n        document.querySelector(\"calcite-chip:last-child\").remove();\n      });\n\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await selectedItemAsserter([chip4.id]);\n\n      await page.evaluate(() => {\n        document.querySelector(\"calcite-chip:last-child\").remove();\n      });\n\n      await page.waitForChanges();\n      expect(chipGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(chipSelectSpy2).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(0);\n      await selectedItemAsserter([]);\n    });\n  });\n});\n"]}