{"version":3,"file":"chip-group.js","sourceRoot":"","sources":["../../../../src/components/chip-group/chip-group.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  h,\n  VNode,\n  Prop,\n  Element,\n  Listen,\n  EventEmitter,\n  Event,\n  Method,\n  Watch,\n} from \"@stencil/core\";\nimport { focusElementInGroup, slotChangeGetAssignedElements, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { Scale, SelectionMode } from \"../interfaces\";\nimport {\n  componentFocusable,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n/**\n * @slot - A slot for adding one or more `calcite-chip`s.\n */\n@Component({\n  tag: \"calcite-chip-group\",\n  styleUrl: \"chip-group.scss\",\n  shadow: true,\n})\nexport class ChipGroup implements InteractiveComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /** Specifies the size of the component. Child `calcite-chip`s inherit the component's value. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection,\n   *\n   * `\"single-persist\"` allows one selection and prevents de-selection, and\n   *\n   * `\"none\"` does not allow any selections.\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"multiple\" | \"single\" | \"single-persist\" | \"none\",\n    SelectionMode\n  > = \"none\";\n\n  @Watch(\"selectionMode\")\n  onSelectionModeChange(): void {\n    this.updateItems();\n  }\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteChipElement[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteChipGroupElement;\n\n  private items: HTMLCalciteChipElement[] = [];\n\n  private slotRefEl: HTMLSlotElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the component's selection changes. */\n  @Event({ cancelable: false }) calciteChipGroupSelect: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    disconnectInteractive(this);\n    updateHostInteraction(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalChipKeyEvent\")\n  calciteInternalChipKeyEventListener(event: CustomEvent): void {\n    if (event.composedPath().includes(this.el)) {\n      const interactiveItems = this.items?.filter((el) => !el.disabled);\n      switch (event.detail.key) {\n        case \"ArrowRight\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"next\");\n          break;\n        case \"ArrowLeft\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"previous\");\n          break;\n        case \"Home\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"first\");\n          break;\n        case \"End\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"last\");\n          break;\n      }\n    }\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteChipClose\")\n  calciteChipCloseListener(event: CustomEvent): void {\n    const item = event.target as HTMLCalciteChipElement;\n    if (this.items?.includes(item)) {\n      if (this.items?.indexOf(item) > 0) {\n        focusElementInGroup(this.items, item as HTMLCalciteChipElement, \"previous\");\n      } else if (this.items?.indexOf(item) === 0) {\n        focusElementInGroup(this.items, item as HTMLCalciteChipElement, \"next\");\n      } else {\n        focusElementInGroup(this.items, item as HTMLCalciteChipElement, \"first\");\n      }\n    }\n    this.items = this.items?.filter((el) => el !== item);\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteChipSelect\")\n  calciteChipSelectListener(event: CustomEvent): void {\n    if (event.composedPath().includes(this.el)) {\n      this.setSelectedItems(true, event.target as HTMLCalciteChipElement);\n    }\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalChipSelect\")\n  calciteInternalChipSelectListener(event: CustomEvent): void {\n    if (event.composedPath().includes(this.el)) {\n      this.setSelectedItems(false, event.target as HTMLCalciteChipElement);\n    }\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalSyncSelectedChips\")\n  calciteInternalSyncSelectedChips(event: CustomEvent): void {\n    if (event.composedPath().includes(this.el)) {\n      this.updateSelectedItems();\n      if (this.selectionMode === \"single\" && this.selectedItems.length > 1) {\n        this.setSelectedItems(false, event.target as HTMLCalciteChipElement);\n      }\n    }\n    event.stopPropagation();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    if (!this.disabled) {\n      return (this.selectedItems[0] || this.items[0])?.setFocus();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private updateItems = (event?: Event): void => {\n    const itemsFromSlot = this.slotRefEl\n      ?.assignedElements({ flatten: true })\n      .filter((el) => el?.matches(\"calcite-chip\")) as HTMLCalciteChipElement[];\n\n    this.items = !event\n      ? itemsFromSlot\n      : (slotChangeGetAssignedElements(event) as HTMLCalciteChipElement[]);\n\n    if (this.items?.length < 1) {\n      return;\n    }\n\n    this.items?.forEach((el) => {\n      el.interactive = true;\n      el.scale = this.scale;\n      el.selectionMode = this.selectionMode;\n      el.parentChipGroup = this.el;\n    });\n\n    this.setSelectedItems(false);\n  };\n\n  private updateSelectedItems = (): void => {\n    this.selectedItems = this.items?.filter((el) => el.selected);\n  };\n\n  private setSelectedItems = (emit: boolean, elToMatch?: HTMLCalciteChipElement): void => {\n    if (elToMatch) {\n      this.items?.forEach((el) => {\n        const matchingEl = elToMatch === el;\n        switch (this.selectionMode) {\n          case \"multiple\":\n            if (matchingEl) {\n              el.selected = !el.selected;\n            }\n            break;\n\n          case \"single\":\n            el.selected = matchingEl ? !el.selected : false;\n            break;\n\n          case \"single-persist\":\n            el.selected = !!matchingEl;\n            break;\n        }\n      });\n    }\n\n    this.updateSelectedItems();\n\n    if (emit) {\n      this.calciteChipGroupSelect.emit();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const role =\n      this.selectionMode === \"none\" || this.selectionMode === \"multiple\" ? \"group\" : \"radiogroup\";\n    const { disabled } = this;\n\n    return (\n      <InteractiveContainer disabled={disabled}>\n        <div\n          aria-disabled={toAriaBoolean(disabled)}\n          aria-label={this.label}\n          class=\"container\"\n          role={role}\n        >\n          <slot\n            onSlotchange={this.updateItems}\n            ref={(el) => (this.slotRefEl = el as HTMLSlotElement)}\n          />\n        </div>\n      </InteractiveContainer>\n    );\n  }\n}\n"]}