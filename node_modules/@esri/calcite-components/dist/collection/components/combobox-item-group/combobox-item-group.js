/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.9.0
 */
import { h } from "@stencil/core";
import { guid } from "../../utils/guid";
import { getAncestors, getDepth } from "../combobox/utils";
import { CSS } from "./resources";
/**
 * @slot - A slot for adding `calcite-combobox-item`s.
 */
export class ComboboxItemGroup {
    constructor() {
        this.guid = guid();
        this.afterEmptyGroup = false;
        this.ancestors = undefined;
        this.label = undefined;
        this.scale = "m";
    }
    // --------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    // --------------------------------------------------------------------------
    connectedCallback() {
        this.ancestors = getAncestors(this.el);
    }
    // --------------------------------------------------------------------------
    //
    //  Render Methods
    //
    // --------------------------------------------------------------------------
    render() {
        const { el, scale } = this;
        const depth = getDepth(el);
        return (h("ul", { key: 'f97f7287323229be32779d451a7e816b016c02b4', "aria-labelledby": this.guid, class: { [CSS.list]: true, [`scale--${scale}`]: true }, role: "group" }, h("li", { key: 'e7aa9b0a2955562d9687c294b3b39eafbd04c5a2', class: { [CSS.label]: true }, id: this.guid, role: "presentation", style: { "--calcite-combobox-item-spacing-indent-multiplier": `${depth}` } }, h("span", { key: '5b02b92d24c05a93a5aeeda140f7422c50fb52b0', class: CSS.title }, this.label)), h("slot", { key: '1a2e106d97304df29b2cbf5841e65726e55960ae' })));
    }
    static get is() { return "calcite-combobox-item-group"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["combobox-item-group.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["combobox-item-group.css"]
        };
    }
    static get properties() {
        return {
            "afterEmptyGroup": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [{
                            "name": "internal",
                            "text": undefined
                        }],
                    "text": "When `true`, signifies that the group comes after another group without any children (items or sub-groups), otherwise indicates that the group comes after another group that has children. Used for styling."
                },
                "attribute": "after-empty-group",
                "reflect": true,
                "defaultValue": "false"
            },
            "ancestors": {
                "type": "unknown",
                "mutable": true,
                "complexType": {
                    "original": "ComboboxChildElement[]",
                    "resolved": "ComboboxChildElement[]",
                    "references": {
                        "ComboboxChildElement": {
                            "location": "import",
                            "path": "../combobox/interfaces",
                            "id": "src/components/combobox/interfaces.ts::ComboboxChildElement"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies the parent and grandparent `calcite-combobox-item`s, which are set on `calcite-combobox`."
                }
            },
            "label": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": true,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies the title of the component."
                },
                "attribute": "label",
                "reflect": false
            },
            "scale": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "Scale",
                    "resolved": "\"l\" | \"m\" | \"s\"",
                    "references": {
                        "Scale": {
                            "location": "import",
                            "path": "../interfaces",
                            "id": "src/components/interfaces.ts::Scale"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [{
                            "name": "internal",
                            "text": undefined
                        }],
                    "text": "Specifies the size of the component inherited from the `calcite-combobox`, defaults to `m`."
                },
                "attribute": "scale",
                "reflect": false,
                "defaultValue": "\"m\""
            }
        };
    }
    static get elementRef() { return "el"; }
}
//# sourceMappingURL=combobox-item-group.js.map
