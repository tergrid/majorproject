{"version":3,"file":"input-time-zone.js","sourceRoot":"","sources":["../../../../src/components/input-time-zone/input-time-zone.tsx"],"names":[],"mappings":"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":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { connectLabel, disconnectLabel, LabelableComponent } from \"../../utils/label\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  SupportedLocale,\n} from \"../../utils/locale\";\nimport { Scale, Status } from \"../interfaces\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  afterConnectDefaultValueSet,\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  MutableValidityState,\n} from \"../../utils/form\";\nimport {\n  createTimeZoneItems,\n  findTimeZoneItemByProp,\n  getUserTimeZoneName,\n  getUserTimeZoneOffset,\n} from \"./utils\";\nimport { InputTimeZoneMessages } from \"./assets/input-time-zone/t9n\";\nimport { TimeZoneItem, TimeZoneMode } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-input-time-zone\",\n  styleUrl: \"input-time-zone.scss\",\n  assetsDirs: [\"assets\"],\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class InputTimeZone\n  implements\n    FormComponent,\n    InteractiveComponent,\n    LabelableComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, an empty value (`null`) will be allowed as a `value`.\n   *\n   * When `false`, an offset or name value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /** Specifies the component's maximum number of options to display before displaying a scrollbar. */\n  @Prop({ reflect: true }) maxItems = 0;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputTimeZoneMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputTimeZoneMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * This specifies the type of `value` and the associated options presented to the user:\n   *\n   * Using `\"offset\"` will provide options that show timezone offsets.\n   *\n   * Using `\"name\"` will provide options that show the IANA time zone names.\n   *\n   * @default \"offset\"\n   */\n  @Prop({ reflect: true }) mode: TimeZoneMode = \"offset\";\n\n  @Watch(\"messages\")\n  @Watch(\"mode\")\n  @Watch(\"referenceDate\")\n  handleTimeZoneItemPropsChange(): void {\n    this.updateTimeZoneItemsAndSelection();\n  }\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: string | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** When `true`, displays and positions the component. */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * This `date` will be used as a reference to Daylight Savings Time when creating time zone item groups.\n   *\n   * It can be either a Date instance or a string in ISO format (`\"YYYY-MM-DD\"`, `\"YYYY-MM-DDTHH:MM:SS.SSSZ\"`).\n   *\n   * @see [Date.prototype.toISOString](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n   */\n  @Prop() referenceDate: Date | string;\n\n  /**\n   * When `true`, the component must have a value in order for the form to submit.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * The component's value, where the value is the time zone offset or the difference, in minutes, between the selected time zone and UTC.\n   *\n   * If no value is provided, the user's time zone offset will be selected by default.\n   *\n   * @see https://www.w3.org/International/core/2005/09/timezone.html#:~:text=What%20is%20a%20%22zone%20offset,or%20%22%2D%22%20from%20UTC.\n   */\n  @Prop({ mutable: true }) value: string;\n\n  @Watch(\"value\")\n  handleValueChange(value: string, oldValue: string): void {\n    value = this.normalizeValue(value);\n\n    if (!value && this.clearable) {\n      this.value = value;\n      this.selectedTimeZoneItem = null;\n      return;\n    }\n\n    const timeZoneItem = this.findTimeZoneItem(value);\n\n    if (!timeZoneItem) {\n      this.value = oldValue;\n      return;\n    }\n\n    this.selectedTimeZoneItem = timeZoneItem;\n  }\n\n  /**\n   * When `true`, the component's value can be read, but controls are not accessible and the value cannot be modified.\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    await this.comboboxEl.setFocus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component is requested to be closed and before the closing transition begins.\n   */\n  @Event({ cancelable: false }) calciteInputTimeZoneBeforeClose: EventEmitter<void>;\n\n  /**\n   * Fires when the component is added to the DOM but not rendered, and before the opening transition begins.\n   */\n  @Event({ cancelable: false }) calciteInputTimeZoneBeforeOpen: EventEmitter<void>;\n\n  /**\n   * Fires when the component's `value` changes.\n   */\n  @Event({ cancelable: false }) calciteInputTimeZoneChange: EventEmitter<void>;\n\n  /**\n   * Fires after the component is closed and animation is complete.\n   */\n  @Event({ cancelable: false }) calciteInputTimeZoneClose: EventEmitter<void>;\n\n  /**\n   * Fires after the component is opened and animation is complete.\n   */\n  @Event({ cancelable: false }) calciteInputTimeZoneOpen: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputTimeZoneElement;\n\n  private comboboxEl: HTMLCalciteComboboxElement;\n\n  @State() defaultMessages: InputTimeZoneMessages;\n\n  defaultValue: InputTimeZone[\"value\"];\n\n  @State() effectiveLocale: SupportedLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleWatcher(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  formEl: HTMLFormElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  private selectedTimeZoneItem: TimeZoneItem;\n\n  private timeZoneItems: TimeZoneItem[];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  private setComboboxRef = (el: HTMLCalciteComboboxElement): void => {\n    this.comboboxEl = el;\n  };\n\n  private onComboboxBeforeClose = (event: CustomEvent): void => {\n    event.stopPropagation();\n    this.calciteInputTimeZoneBeforeClose.emit();\n  };\n\n  private onComboboxBeforeOpen = (event: CustomEvent): void => {\n    event.stopPropagation();\n    this.calciteInputTimeZoneBeforeOpen.emit();\n  };\n\n  private onComboboxChange = (event: CustomEvent): void => {\n    event.stopPropagation();\n    const combobox = event.target as HTMLCalciteComboboxElement;\n    const selectedItem = combobox.selectedItems[0];\n\n    if (!selectedItem) {\n      this.value = null;\n      this.selectedTimeZoneItem = null;\n      this.calciteInputTimeZoneChange.emit();\n      return;\n    }\n\n    const selected = this.findTimeZoneItemByLabel(selectedItem.textLabel);\n\n    const selectedValue = `${selected.value}`;\n\n    if (this.value === selectedValue && selected.label === this.selectedTimeZoneItem.label) {\n      return;\n    }\n\n    this.value = selectedValue;\n    this.selectedTimeZoneItem = selected;\n    this.calciteInputTimeZoneChange.emit();\n  };\n\n  private onComboboxClose = (event: CustomEvent): void => {\n    event.stopPropagation();\n    this.open = false;\n    this.calciteInputTimeZoneClose.emit();\n  };\n\n  private onComboboxOpen = (event: CustomEvent): void => {\n    this.open = true;\n    event.stopPropagation();\n    this.calciteInputTimeZoneOpen.emit();\n  };\n\n  private findTimeZoneItem(value: number | string | null): TimeZoneItem | null {\n    return findTimeZoneItemByProp(this.timeZoneItems, \"value\", value);\n  }\n\n  private findTimeZoneItemByLabel(label: string | null): TimeZoneItem | null {\n    return findTimeZoneItemByProp(this.timeZoneItems, \"label\", label);\n  }\n\n  private async updateTimeZoneItemsAndSelection(): Promise<void> {\n    this.timeZoneItems = await this.createTimeZoneItems();\n\n    if (this.value === \"\" && this.clearable) {\n      this.selectedTimeZoneItem = null;\n      return;\n    }\n\n    const fallbackValue = this.mode === \"offset\" ? getUserTimeZoneOffset() : getUserTimeZoneName();\n    const valueToMatch = this.value ?? fallbackValue;\n\n    this.selectedTimeZoneItem =\n      this.findTimeZoneItem(valueToMatch) || this.findTimeZoneItem(fallbackValue);\n  }\n\n  private async createTimeZoneItems(): Promise<TimeZoneItem[]> {\n    if (!this.effectiveLocale || !this.messages) {\n      return [];\n    }\n\n    return createTimeZoneItems(\n      this.effectiveLocale,\n      this.messages,\n      this.mode,\n      this.referenceDate instanceof Date\n        ? this.referenceDate\n        : new Date(this.referenceDate ?? Date.now()),\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectForm(this);\n    connectLabel(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectForm(this);\n    disconnectLabel(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  private normalizeValue(value: string | null): string {\n    return value === null ? \"\" : value;\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n    this.value = this.normalizeValue(this.value);\n\n    await this.updateTimeZoneItemsAndSelection();\n\n    const selectedValue = this.selectedTimeZoneItem ? `${this.selectedTimeZoneItem.value}` : null;\n    afterConnectDefaultValueSet(this, selectedValue);\n    this.value = selectedValue;\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <calcite-combobox\n            clearDisabled={!this.clearable}\n            disabled={this.disabled}\n            label={this.messages.chooseTimeZone}\n            lang={this.effectiveLocale}\n            maxItems={this.maxItems}\n            onCalciteComboboxBeforeClose={this.onComboboxBeforeClose}\n            onCalciteComboboxBeforeOpen={this.onComboboxBeforeOpen}\n            onCalciteComboboxChange={this.onComboboxChange}\n            onCalciteComboboxClose={this.onComboboxClose}\n            onCalciteComboboxOpen={this.onComboboxOpen}\n            open={this.open}\n            overlayPositioning={this.overlayPositioning}\n            placeholder={\n              this.mode === \"name\" ? this.messages.namePlaceholder : this.messages.offsetPlaceholder\n            }\n            readOnly={this.readOnly}\n            ref={this.setComboboxRef}\n            scale={this.scale}\n            selectionMode={this.clearable ? \"single\" : \"single-persist\"}\n            status={this.status}\n            validation-icon={this.validationIcon}\n            validation-message={this.validationMessage}\n          >\n            {this.timeZoneItems.map((group) => {\n              const selected = this.selectedTimeZoneItem === group;\n              const { label, value } = group;\n\n              return (\n                <calcite-combobox-item\n                  data-value={value}\n                  key={label}\n                  selected={selected}\n                  textLabel={label}\n                  value={`${group.filterValue}`}\n                />\n              );\n            })}\n          </calcite-combobox>\n          <HiddenFormInputSlot component={this} />\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"]}