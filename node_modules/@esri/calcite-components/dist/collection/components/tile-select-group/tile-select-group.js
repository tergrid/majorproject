/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.9.0
 */
import { h } from "@stencil/core";
import { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from "../../utils/interactive";
/**
 * @deprecated Use the `calcite-tile-group` component instead.
 * @slot - A slot for adding `calcite-tile-select` elements.
 */
export class TileSelectGroup {
    constructor() {
        this.disabled = false;
        this.layout = "horizontal";
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    connectedCallback() {
        connectInteractive(this);
    }
    componentDidRender() {
        updateHostInteraction(this);
    }
    disconnectedCallback() {
        disconnectInteractive(this);
    }
    render() {
        return (h(InteractiveContainer, { key: '0a940853ee584166188e6c553db579ec7dcae268', disabled: this.disabled }, h("slot", { key: 'f0ee847dc3b6896ff245df23d6b76ce5816f482d' })));
    }
    static get is() { return "calcite-tile-select-group"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["tile-select-group.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["tile-select-group.css"]
        };
    }
    static get properties() {
        return {
            "disabled": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "When `true`, interaction is prevented and the component is displayed with lower opacity."
                },
                "attribute": "disabled",
                "reflect": true,
                "defaultValue": "false"
            },
            "layout": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "TileSelectGroupLayout",
                    "resolved": "\"horizontal\" | \"vertical\"",
                    "references": {
                        "TileSelectGroupLayout": {
                            "location": "import",
                            "path": "./interfaces",
                            "id": "src/components/tile-select-group/interfaces.ts::TileSelectGroupLayout"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Defines the layout of the component.\n\nUse `\"horizontal\"` for rows, and `\"vertical\"` for a single column."
                },
                "attribute": "layout",
                "reflect": true,
                "defaultValue": "\"horizontal\""
            }
        };
    }
    static get elementRef() { return "el"; }
}
//# sourceMappingURL=tile-select-group.js.map
