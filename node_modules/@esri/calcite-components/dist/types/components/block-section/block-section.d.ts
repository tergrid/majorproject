import { EventEmitter, VNode } from "../../stencil-public-runtime";
import { LocalizedComponent } from "../../utils/locale";
import { FlipContext } from "../interfaces";
import { T9nComponent } from "../../utils/t9n";
import { Status } from "../interfaces";
import { LoadableComponent } from "../../utils/loadable";
import { BlockSectionMessages } from "./assets/block-section/t9n";
import { BlockSectionToggleDisplay } from "./interfaces";
/**
 * @slot - A slot for adding custom content.
 */
export declare class BlockSection implements LocalizedComponent, T9nComponent, LoadableComponent {
    /** Specifies an icon to display at the end of the component. */
    iconEnd: string;
    /** Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`"rtl"`). */
    iconFlipRtl: FlipContext;
    /** Specifies an icon to display at the start of the component. */
    iconStart: string;
    /**
     * When `true`, expands the component and its contents.
     */
    open: boolean;
    /**
     * Displays a status-related indicator icon.
     *
     * @deprecated Use `icon-start` instead.
     */
    status: Status;
    /**
     * The component header text.
     */
    text: string;
    /**
     * Specifies how the component's toggle is displayed, where:
     *
     * `"button"` sets the toggle to a selectable header, and
     *
     * `"switch"` sets the toggle to a switch.
     */
    toggleDisplay: BlockSectionToggleDisplay;
    /**
     * Made into a prop for testing purposes only
     *
     * @internal
     */
    messages: BlockSectionMessages;
    /**
     * Use this property to override individual strings used by the component.
     */
    messageOverrides: Partial<BlockSectionMessages>;
    onMessagesChange(): void;
    /**
     * Sets focus on the component's first tabbable element.
     *
     */
    setFocus(): Promise<void>;
    el: HTMLCalciteBlockSectionElement;
    effectiveLocale: string;
    effectiveLocaleChange(): void;
    defaultMessages: BlockSectionMessages;
    /**
     * Fires when the header has been clicked.
     */
    calciteBlockSectionToggle: EventEmitter<void>;
    handleHeaderKeyDown: (event: KeyboardEvent) => void;
    toggleSection: () => void;
    connectedCallback(): void;
    componentWillLoad(): Promise<void>;
    componentDidLoad(): void;
    disconnectedCallback(): void;
    renderStatusIcon(): VNode[];
    renderIcon(icon: string): VNode;
    render(): VNode;
}
